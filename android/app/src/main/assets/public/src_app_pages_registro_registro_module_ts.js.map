{"version":3,"file":"src_app_pages_registro_registro_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;;AAAzB,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;;AAAlB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB/B;AAEA;AACA;IAQaG,YAAY,SAAZA,YAAY;EAOvBC,YAAoBC,OAApB,EAA8CC,MAA9C,EAA2D;IAAvC;IAA0B;IAL9C,eAAmB;MACjBC,QAAQ,EAAE,EADO;MAEjBC,QAAQ,EAAE;IAFO,CAAnB;EAKgE;;EAEhEC,QAAQ,IACP;;EAEDC,QAAQ;IACNC,OAAO,CAACC,GAAR,CAAY,KAAKC,OAAjB;IACA,KAAKC,OAAL;EACD;;EAGKA,OAAO;IAAA;;IAAA;MACX,IAAIC,KAAK,SAAS,KAAI,CAACV,OAAL,CAAaW,GAAb,CAAiB,KAAI,CAACH,OAAL,CAAaN,QAA9B,CAAlB;;MAEA,IAAIQ,KAAK,IAAI,IAAb,EAAmB;QACjB;QACA,MAAM,KAAI,CAACV,OAAL,CAAaY,GAAb,CAAiB,KAAI,CAACJ,OAAL,CAAaN,QAA9B,EAAwC,KAAI,CAACM,OAA7C,CAAN;QACAF,OAAO,CAACC,GAAR,CAAY,wBAAZ;;QACA,KAAI,CAACN,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;MACD,CALD,MAKO;QACL;QACAP,OAAO,CAACC,GAAR,CAAY,mBAAZ;MACD;IAXU;EAYZ;;AA9BsB;;;;;;;;AAAZT,YAAY,sDALxBH,wDAAS,CAAC;EACTmB,QAAQ,EAAE,cADD;EAETC,UAAAA,2DAFS;;AAAA,CAAD,CAKe,GAAZjB,YAAY,CAAZ","sources":["./src/app/pages/registro/registro-routing.module.ts","./src/app/pages/registro/registro.module.ts","./src/app/pages/registro/registro.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistroPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegistroPageRoutingModule } from './registro-routing.module';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegistroPageRoutingModule\r\n  ],\r\n  declarations: [RegistroPage]\r\n})\r\nexport class RegistroPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Usuario } from './../../interfaces/usuario';\r\nimport { Storage } from '@ionic/storage-angular';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.page.html',\r\n  styleUrls: ['./registro.page.scss'],\r\n})\r\nexport class RegistroPage implements OnInit {\r\n\r\n  usuario: Usuario = {\r\n    username: '',\r\n    password: ''\r\n  }\r\n\r\n  constructor(private storage: Storage, private router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.usuario);\r\n    this.addUser();\r\n  }\r\n\r\n\r\n  async addUser() {\r\n    let found = await this.storage.get(this.usuario.username);\r\n\r\n    if (found == null) {\r\n      // crear user\r\n      await this.storage.set(this.usuario.username, this.usuario);\r\n      console.log(\"Registro Satisfactorio\");\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      // mostrar error (ya existe un usuario con ese nombre)\r\n      console.log(\"Usuario ya existe\");\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":["Component","Storage","Router","RegistroPage","constructor","storage","router","username","password","ngOnInit","onSubmit","console","log","usuario","addUser","found","get","set","navigate","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}