"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-button_2_entry_js"],{

/***/ 8308:
/*!*****************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_button": () => (/* binding */ Button),
/* harmony export */   "ion_icon": () => (/* binding */ Icon)
/* harmony export */ });
/* harmony import */ var _index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-1a99aeb7.js */ 4895);
/* harmony import */ var _ionic_global_04e268e7_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ionic-global-04e268e7.js */ 2107);
/* harmony import */ var _helpers_4d272360_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers-4d272360.js */ 9158);
/* harmony import */ var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./theme-7670341c.js */ 320);
/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */




let CACHED_MAP;

const getIconMap = () => {
  if (typeof window === 'undefined') {
    return new Map();
  } else {
    if (!CACHED_MAP) {
      const win = window;
      win.Ionicons = win.Ionicons || {};
      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();
    }

    return CACHED_MAP;
  }
};

const getUrl = i => {
  let url = getSrc(i.src);

  if (url) {
    return url;
  }

  url = getName(i.name, i.icon, i.mode, i.ios, i.md);

  if (url) {
    return getNamedUrl(url);
  }

  if (i.icon) {
    url = getSrc(i.icon);

    if (url) {
      return url;
    }

    url = getSrc(i.icon[i.mode]);

    if (url) {
      return url;
    }
  }

  return null;
};

const getNamedUrl = iconName => {
  const url = getIconMap().get(iconName);

  if (url) {
    return url;
  }

  return (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.k)(`svg/${iconName}.svg`);
};

const getName = (iconName, icon, mode, ios, md) => {
  // default to "md" if somehow the mode wasn't set
  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md'; // if an icon was passed in using the ios or md attributes
  // set the iconName to whatever was passed in

  if (ios && mode === 'ios') {
    iconName = toLower(ios);
  } else if (md && mode === 'md') {
    iconName = toLower(md);
  } else {
    if (!iconName && icon && !isSrc(icon)) {
      iconName = icon;
    }

    if (isStr(iconName)) {
      iconName = toLower(iconName);
    }
  }

  if (!isStr(iconName) || iconName.trim() === '') {
    return null;
  } // only allow alpha characters and dash


  const invalidChars = iconName.replace(/[a-z]|-|\d/gi, '');

  if (invalidChars !== '') {
    return null;
  }

  return iconName;
};

const getSrc = src => {
  if (isStr(src)) {
    src = src.trim();

    if (isSrc(src)) {
      return src;
    }
  }

  return null;
};

const isSrc = str => str.length > 0 && /(\/|\.)/.test(str);

const isStr = val => typeof val === 'string';

const toLower = val => val.toLowerCase();
/**
 * Elements inside of web components sometimes need to inherit global attributes
 * set on the host. For example, the inner input in `ion-input` should inherit
 * the `title` attribute that developers set directly on `ion-input`. This
 * helper function should be called in componentWillLoad and assigned to a variable
 * that is later used in the render function.
 *
 * This does not need to be reactive as changing attributes on the host element
 * does not trigger a re-render.
 */


const inheritAttributes = (el, attributes = []) => {
  const attributeObject = {};
  attributes.forEach(attr => {
    if (el.hasAttribute(attr)) {
      const value = el.getAttribute(attr);

      if (value !== null) {
        attributeObject[attr] = el.getAttribute(attr);
      }

      el.removeAttribute(attr);
    }
  });
  return attributeObject;
};

const buttonIosCss = ":host{--overflow:hidden;--ripple-color:currentColor;--border-width:initial;--border-color:initial;--border-style:initial;--color-activated:var(--color);--color-focused:var(--color);--color-hover:var(--color);--box-shadow:none;display:inline-block;width:auto;color:var(--color);font-family:var(--ion-font-family, inherit);text-align:center;text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:top;vertical-align:-webkit-baseline-middle;-webkit-font-kerning:none;font-kerning:none}:host(.button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.button-solid){--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff)}:host(.button-outline){--border-color:var(--ion-color-primary, #3880ff);--background:transparent;--color:var(--ion-color-primary, #3880ff)}:host(.button-clear){--border-width:0;--background:transparent;--color:var(--ion-color-primary, #3880ff)}:host(.button-block){display:block}:host(.button-block) .button-native{margin-left:0;margin-right:0;display:block;width:100%;clear:both;contain:content}:host(.button-block) .button-native::after{clear:both}:host(.button-full){display:block}:host(.button-full) .button-native{margin-left:0;margin-right:0;display:block;width:100%;contain:content}:host(.button-full:not(.button-round)) .button-native{border-radius:0;border-right-width:0;border-left-width:0}.button-native{border-radius:var(--border-radius);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:var(--background);line-height:1;-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);contain:layout style;cursor:pointer;opacity:var(--opacity);overflow:var(--overflow);z-index:0;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::-moz-focus-inner{border:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}::slotted(ion-icon){font-size:1.4em;pointer-events:none}::slotted(ion-icon[slot=start]){margin-left:-0.3em;margin-right:0.3em;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:-0.3em;margin-inline-start:-0.3em;-webkit-margin-end:0.3em;margin-inline-end:0.3em}}::slotted(ion-icon[slot=end]){margin-left:0.3em;margin-right:-0.2em;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;margin-right:unset;-webkit-margin-start:0.3em;margin-inline-start:0.3em;-webkit-margin-end:-0.2em;margin-inline-end:-0.2em}}::slotted(ion-icon[slot=icon-only]){font-size:1.8em}ion-ripple-effect{color:var(--ripple-color)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\"\";opacity:0}:host(.ion-activated){color:var(--color-activated)}:host(.ion-activated) .button-native::after{background:var(--background-activated);opacity:var(--background-activated-opacity)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover){color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}}:host(.button-solid.ion-color) .button-native{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.button-outline.ion-color) .button-native{border-color:var(--ion-color-base);background:transparent;color:var(--ion-color-base)}:host(.button-clear.ion-color) .button-native{background:transparent;color:var(--ion-color-base)}:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{color:var(--ion-toolbar-color, var(--color))}:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{border-color:var(--ion-toolbar-color, var(--color, var(--border-color)))}:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{background:var(--ion-toolbar-color, var(--background));color:var(--ion-toolbar-background, var(--color))}:host{--border-radius:10px;--padding-top:0;--padding-bottom:0;--padding-start:1em;--padding-end:1em;--transition:background-color, opacity 100ms linear;margin-left:2px;margin-right:2px;margin-top:4px;margin-bottom:4px;height:2.8em;font-size:16px;font-weight:500;letter-spacing:-0.03em}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.button-solid){--background-activated:var(--ion-color-primary-shade, #3171e0);--background-focused:var(--ion-color-primary-shade, #3171e0);--background-hover:var(--ion-color-primary-tint, #4c8dff);--background-activated-opacity:1;--background-focused-opacity:1;--background-hover-opacity:1}:host(.button-outline){--border-radius:10px;--border-width:1px;--border-style:solid;--background-activated:var(--ion-color-primary, #3880ff);--background-focused:var(--ion-color-primary, #3880ff);--background-hover:transparent;--background-focused-opacity:.1;--color-activated:var(--ion-color-primary-contrast, #fff)}:host(.button-clear){--background-activated:transparent;--background-focused:var(--ion-color-primary, #3880ff);--background-hover:transparent;--background-focused-opacity:.1;font-size:17px;font-weight:normal;letter-spacing:0}:host(.button-large){--border-radius:12px;--padding-top:0;--padding-start:1em;--padding-end:1em;--padding-bottom:0;height:2.8em;font-size:20px}:host(.button-small){--border-radius:6px;--padding-top:0;--padding-start:0.9em;--padding-end:0.9em;--padding-bottom:0;height:2.1em;font-size:13px}:host(.button-round){--border-radius:64px;--padding-top:0;--padding-start:26px;--padding-end:26px;--padding-bottom:0}:host(.button-strong){font-weight:600}:host(.button-clear.ion-activated){opacity:0.4}:host(.button-outline.ion-activated.ion-color) .button-native{color:var(--ion-color-contrast)}:host(.button-outline.ion-activated.ion-color) .button-native::after{background:var(--ion-color-base)}:host(.button-solid.ion-color.ion-activated) .button-native::after{background:var(--ion-color-shade)}:host(.button-outline.ion-focused.ion-color) .button-native,:host(.button-clear.ion-focused.ion-color) .button-native{color:var(--ion-color-base)}:host(.button-outline.ion-focused.ion-color) .button-native::after,:host(.button-clear.ion-focused.ion-color) .button-native::after{background:var(--ion-color-base)}:host(.button-solid.ion-color.ion-focused) .button-native::after{background:var(--ion-color-shade)}@media (any-hover: hover){:host(.button-clear:hover),:host(.button-outline:hover){opacity:0.6}:host(.button-clear.ion-color:hover) .button-native,:host(.button-outline.ion-color:hover) .button-native{color:var(--ion-color-base)}:host(.button-clear.ion-color:hover) .button-native::after,:host(.button-outline.ion-color:hover) .button-native::after{background:transparent}:host(.button-solid.ion-color:hover) .button-native::after{background:var(--ion-color-tint)}:host(:hover.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native::after{background:#fff;opacity:0.1}}";
const buttonMdCss = ":host{--overflow:hidden;--ripple-color:currentColor;--border-width:initial;--border-color:initial;--border-style:initial;--color-activated:var(--color);--color-focused:var(--color);--color-hover:var(--color);--box-shadow:none;display:inline-block;width:auto;color:var(--color);font-family:var(--ion-font-family, inherit);text-align:center;text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:top;vertical-align:-webkit-baseline-middle;-webkit-font-kerning:none;font-kerning:none}:host(.button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.button-solid){--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff)}:host(.button-outline){--border-color:var(--ion-color-primary, #3880ff);--background:transparent;--color:var(--ion-color-primary, #3880ff)}:host(.button-clear){--border-width:0;--background:transparent;--color:var(--ion-color-primary, #3880ff)}:host(.button-block){display:block}:host(.button-block) .button-native{margin-left:0;margin-right:0;display:block;width:100%;clear:both;contain:content}:host(.button-block) .button-native::after{clear:both}:host(.button-full){display:block}:host(.button-full) .button-native{margin-left:0;margin-right:0;display:block;width:100%;contain:content}:host(.button-full:not(.button-round)) .button-native{border-radius:0;border-right-width:0;border-left-width:0}.button-native{border-radius:var(--border-radius);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:var(--background);line-height:1;-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);contain:layout style;cursor:pointer;opacity:var(--opacity);overflow:var(--overflow);z-index:0;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::-moz-focus-inner{border:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}::slotted(ion-icon){font-size:1.4em;pointer-events:none}::slotted(ion-icon[slot=start]){margin-left:-0.3em;margin-right:0.3em;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:-0.3em;margin-inline-start:-0.3em;-webkit-margin-end:0.3em;margin-inline-end:0.3em}}::slotted(ion-icon[slot=end]){margin-left:0.3em;margin-right:-0.2em;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;margin-right:unset;-webkit-margin-start:0.3em;margin-inline-start:0.3em;-webkit-margin-end:-0.2em;margin-inline-end:-0.2em}}::slotted(ion-icon[slot=icon-only]){font-size:1.8em}ion-ripple-effect{color:var(--ripple-color)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\"\";opacity:0}:host(.ion-activated){color:var(--color-activated)}:host(.ion-activated) .button-native::after{background:var(--background-activated);opacity:var(--background-activated-opacity)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover){color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}}:host(.button-solid.ion-color) .button-native{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.button-outline.ion-color) .button-native{border-color:var(--ion-color-base);background:transparent;color:var(--ion-color-base)}:host(.button-clear.ion-color) .button-native{background:transparent;color:var(--ion-color-base)}:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{color:var(--ion-toolbar-color, var(--color))}:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{border-color:var(--ion-toolbar-color, var(--color, var(--border-color)))}:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native{background:var(--ion-toolbar-color, var(--background));color:var(--ion-toolbar-background, var(--color))}:host{--border-radius:4px;--padding-top:0;--padding-bottom:0;--padding-start:1.1em;--padding-end:1.1em;--transition:box-shadow 280ms cubic-bezier(.4, 0, .2, 1),\n                background-color 15ms linear,\n                color 15ms linear;margin-left:2px;margin-right:2px;margin-top:4px;margin-bottom:4px;height:36px;font-size:14px;font-weight:500;letter-spacing:0.06em;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.button-solid){--background-activated:transparent;--background-hover:var(--ion-color-primary-contrast, #fff);--background-focused:var(--ion-color-primary-contrast, #fff);--background-activated-opacity:0;--background-focused-opacity:.24;--background-hover-opacity:.08;--box-shadow:0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)}:host(.button-solid.ion-activated){--box-shadow:0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12)}:host(.button-outline){--border-width:2px;--border-style:solid;--box-shadow:none;--background-activated:transparent;--background-focused:var(--ion-color-primary, #3880ff);--background-hover:var(--ion-color-primary, #3880ff);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04}:host(.button-outline.ion-activated.ion-color) .button-native{background:transparent}:host(.button-clear){--background-activated:transparent;--background-focused:var(--ion-color-primary, #3880ff);--background-hover:var(--ion-color-primary, #3880ff);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04}:host(.button-round){--border-radius:64px;--padding-top:0;--padding-start:26px;--padding-end:26px;--padding-bottom:0}:host(.button-large){--padding-top:0;--padding-start:1em;--padding-end:1em;--padding-bottom:0;height:2.8em;font-size:20px}:host(.button-small){--padding-top:0;--padding-start:0.9em;--padding-end:0.9em;--padding-bottom:0;height:2.1em;font-size:13px}:host(.button-strong){font-weight:bold}::slotted(ion-icon[slot=icon-only]){padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host(.button-solid.ion-color.ion-focused) .button-native::after{background:var(--ion-color-contrast)}:host(.button-clear.ion-color.ion-focused) .button-native::after,:host(.button-outline.ion-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.button-solid.ion-color:hover) .button-native::after{background:var(--ion-color-contrast)}:host(.button-clear.ion-color:hover) .button-native::after,:host(.button-outline.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}";
const Button = class {
  constructor(hostRef) {
    (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.ionFocus = (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionFocus", 7);
    this.ionBlur = (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionBlur", 7);
    this.inItem = false;
    this.inListHeader = false;
    this.inToolbar = false;
    this.inheritedAttributes = {};
    /**
     * The type of button.
     */

    this.buttonType = 'button';
    /**
     * If `true`, the user cannot interact with the button.
     */

    this.disabled = false;
    /**
     * When using a router, it specifies the transition direction when navigating to
     * another page using `href`.
     */

    this.routerDirection = 'forward';
    /**
     * If `true`, activates a button with a heavier font weight.
     */

    this.strong = false;
    /**
     * The type of the button.
     */

    this.type = 'button';

    this.handleClick = ev => {
      if (this.type === 'button') {
        (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_3__.o)(this.href, ev, this.routerDirection, this.routerAnimation);
      } else if ((0,_helpers_4d272360_js__WEBPACK_IMPORTED_MODULE_2__.m)(this.el)) {
        // this button wants to specifically submit a form
        // climb up the dom to see if we're in a <form>
        // and if so, then use JS to submit it
        const form = this.el.closest('form');

        if (form) {
          ev.preventDefault();
          const fakeButton = document.createElement('button');
          fakeButton.type = this.type;
          fakeButton.style.display = 'none';
          form.appendChild(fakeButton);
          fakeButton.click();
          fakeButton.remove();
        }
      }
    };

    this.onFocus = () => {
      this.ionFocus.emit();
    };

    this.onBlur = () => {
      this.ionBlur.emit();
    };
  }

  componentWillLoad() {
    this.inToolbar = !!this.el.closest('ion-buttons');
    this.inListHeader = !!this.el.closest('ion-list-header');
    this.inItem = !!this.el.closest('ion-item') || !!this.el.closest('ion-item-divider');
    this.inheritedAttributes = (0,_helpers_4d272360_js__WEBPACK_IMPORTED_MODULE_2__.i)(this.el);
  }

  get hasIconOnly() {
    return !!this.el.querySelector('[slot="icon-only"]');
  }

  get rippleType() {
    const hasClearFill = this.fill === undefined || this.fill === 'clear'; // If the button is in a toolbar, has a clear fill (which is the default)
    // and only has an icon we use the unbounded "circular" ripple effect

    if (hasClearFill && this.hasIconOnly && this.inToolbar) {
      return 'unbounded';
    }

    return 'bounded';
  }

  render() {
    const mode = (0,_ionic_global_04e268e7_js__WEBPACK_IMPORTED_MODULE_1__.b)(this);
    const {
      buttonType,
      type,
      disabled,
      rel,
      target,
      size,
      href,
      color,
      expand,
      hasIconOnly,
      shape,
      strong,
      inheritedAttributes
    } = this;
    const finalSize = size === undefined && this.inItem ? 'small' : size;
    const TagType = href === undefined ? 'button' : 'a';
    const attrs = TagType === 'button' ? {
      type
    } : {
      download: this.download,
      href,
      rel,
      target
    };
    let fill = this.fill;

    if (fill === undefined) {
      fill = this.inToolbar || this.inListHeader ? 'clear' : 'solid';
    }

    return (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.H, {
      onClick: this.handleClick,
      "aria-disabled": disabled ? 'true' : null,
      class: (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_3__.c)(color, {
        [mode]: true,
        [buttonType]: true,
        [`${buttonType}-${expand}`]: expand !== undefined,
        [`${buttonType}-${finalSize}`]: finalSize !== undefined,
        [`${buttonType}-${shape}`]: shape !== undefined,
        [`${buttonType}-${fill}`]: true,
        [`${buttonType}-strong`]: strong,
        'in-toolbar': (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_3__.h)('ion-toolbar', this.el),
        'in-toolbar-color': (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_3__.h)('ion-toolbar[color]', this.el),
        'button-has-icon-only': hasIconOnly,
        'button-disabled': disabled,
        'ion-activatable': true,
        'ion-focusable': true
      })
    }, (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)(TagType, Object.assign({}, attrs, {
      class: "button-native",
      part: "native",
      disabled: disabled,
      onFocus: this.onFocus,
      onBlur: this.onBlur
    }, inheritedAttributes), (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", {
      class: "button-inner"
    }, (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", {
      name: "icon-only"
    }), (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", {
      name: "start"
    }), (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null), (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", {
      name: "end"
    })), mode === 'md' && (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-ripple-effect", {
      type: this.rippleType
    })));
  }

  get el() {
    return (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.i)(this);
  }

};
Button.style = {
  ios: buttonIosCss,
  md: buttonMdCss
};

const validateContent = svgContent => {
  const div = document.createElement('div');
  div.innerHTML = svgContent; // setup this way to ensure it works on our buddy IE

  for (let i = div.childNodes.length - 1; i >= 0; i--) {
    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {
      div.removeChild(div.childNodes[i]);
    }
  } // must only have 1 root element


  const svgElm = div.firstElementChild;

  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {
    const svgClass = svgElm.getAttribute('class') || '';
    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim()); // root element must be an svg
    // lets double check we've got valid elements
    // do not allow scripts

    if (isValid(svgElm)) {
      return div.innerHTML;
    }
  }

  return '';
};

const isValid = elm => {
  if (elm.nodeType === 1) {
    if (elm.nodeName.toLowerCase() === 'script') {
      return false;
    }

    for (let i = 0; i < elm.attributes.length; i++) {
      const name = elm.attributes[i].name;

      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {
        return false;
      }
    }

    for (let i = 0; i < elm.childNodes.length; i++) {
      if (!isValid(elm.childNodes[i])) {
        return false;
      }
    }
  }

  return true;
};

const ioniconContent = new Map();
const requests = new Map();

const getSvgContent = (url, sanitize) => {
  // see if we already have a request for this url
  let req = requests.get(url);

  if (!req) {
    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {
      // we don't already have a request
      req = fetch(url).then(rsp => {
        if (rsp.ok) {
          return rsp.text().then(svgContent => {
            if (svgContent && sanitize !== false) {
              svgContent = validateContent(svgContent);
            }

            ioniconContent.set(url, svgContent || '');
          });
        }

        ioniconContent.set(url, '');
      }); // cache for the same requests

      requests.set(url, req);
    } else {
      // set to empty for ssr scenarios and resolve promise
      ioniconContent.set(url, '');
      return Promise.resolve();
    }
  }

  return req;
};

const iconCss = ":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}";
const Icon = class {
  constructor(hostRef) {
    (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.iconName = null;
    this.inheritedAttributes = {};
    this.isVisible = false;
    /**
     * The mode determines which platform styles to use.
     */

    this.mode = getIonMode();
    /**
     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.
     * Default, `false`.
     */

    this.lazy = false;
    /**
     * When set to `false`, SVG content that is HTTP fetched will not be checked
     * if the response SVG content has any `<script>` elements, or any attributes
     * that start with `on`, such as `onclick`.
     * @default true
     */

    this.sanitize = true;

    this.hasAriaHidden = () => {
      const {
        el
      } = this;
      return el.hasAttribute('aria-hidden') && el.getAttribute('aria-hidden') === 'true';
    };
  }

  componentWillLoad() {
    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);
  }

  connectedCallback() {
    // purposely do not return the promise here because loading
    // the svg file should not hold up loading the app
    // only load the svg if it's visible
    this.waitUntilVisible(this.el, '50px', () => {
      this.isVisible = true;
      this.loadIcon();
    });
  }

  disconnectedCallback() {
    if (this.io) {
      this.io.disconnect();
      this.io = undefined;
    }
  }

  waitUntilVisible(el, rootMargin, cb) {
    if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {
      const io = this.io = new window.IntersectionObserver(data => {
        if (data[0].isIntersecting) {
          io.disconnect();
          this.io = undefined;
          cb();
        }
      }, {
        rootMargin
      });
      io.observe(el);
    } else {
      // browser doesn't support IntersectionObserver
      // so just fallback to always show it
      cb();
    }
  }

  loadIcon() {
    if (this.isVisible) {
      const url = getUrl(this);

      if (url) {
        if (ioniconContent.has(url)) {
          // sync if it's already loaded
          this.svgContent = ioniconContent.get(url);
        } else {
          // async if it hasn't been loaded
          getSvgContent(url, this.sanitize).then(() => this.svgContent = ioniconContent.get(url));
        }
      }
    }

    const label = this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);
    /**
     * Come up with a default label
     * in case user does not provide their own.
     */

    if (label) {
      this.ariaLabel = label.replace(/\-/g, ' ');
    }
  }

  render() {
    const {
      iconName,
      ariaLabel,
      inheritedAttributes
    } = this;
    const mode = this.mode || 'md';
    const flipRtl = this.flipRtl || iconName && (iconName.indexOf('arrow') > -1 || iconName.indexOf('chevron') > -1) && this.flipRtl !== false;
    /**
     * Only set the aria-label if a) we have generated
     * one for the icon and if aria-hidden is not set to "true".
     * If developer wants to set their own aria-label, then
     * inheritedAttributes down below will override whatever
     * default label we have set.
     */

    return (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.H, Object.assign({
      "aria-label": ariaLabel !== undefined && !this.hasAriaHidden() ? ariaLabel : null,
      role: "img",
      class: Object.assign(Object.assign({
        [mode]: true
      }, createColorClasses(this.color)), {
        [`icon-${this.size}`]: !!this.size,
        'flip-rtl': !!flipRtl && this.el.ownerDocument.dir === 'rtl'
      })
    }, inheritedAttributes), this.svgContent ? (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", {
      class: "icon-inner",
      innerHTML: this.svgContent
    }) : (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", {
      class: "icon-inner"
    }));
  }

  static get assetsDirs() {
    return ["svg"];
  }

  get el() {
    return (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_0__.i)(this);
  }

  static get watchers() {
    return {
      "name": ["loadIcon"],
      "src": ["loadIcon"],
      "icon": ["loadIcon"]
    };
  }

};

const getIonMode = () => typeof document !== 'undefined' && document.documentElement.getAttribute('mode') || 'md';

const createColorClasses = color => {
  return color ? {
    'ion-color': true,
    [`ion-color-${color}`]: true
  } : null;
};

Icon.style = iconCss;


/***/ }),

/***/ 320:
/*!*************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/theme-7670341c.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "c": () => (/* binding */ createColorClasses),
/* harmony export */   "g": () => (/* binding */ getClassMap),
/* harmony export */   "h": () => (/* binding */ hostContext),
/* harmony export */   "o": () => (/* binding */ openURL)
/* harmony export */ });
/* harmony import */ var C_proyecto_Ionic_Proyecto_semestral_proyecto_semestral_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);


/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */
const hostContext = (selector, el) => {
  return el.closest(selector) !== null;
};
/**
 * Create the mode and color classes for the component based on the classes passed in
 */


const createColorClasses = (color, cssClassMap) => {
  return typeof color === 'string' && color.length > 0 ? Object.assign({
    'ion-color': true,
    [`ion-color-${color}`]: true
  }, cssClassMap) : cssClassMap;
};

const getClassList = classes => {
  if (classes !== undefined) {
    const array = Array.isArray(classes) ? classes : classes.split(' ');
    return array.filter(c => c != null).map(c => c.trim()).filter(c => c !== '');
  }

  return [];
};

const getClassMap = classes => {
  const map = {};
  getClassList(classes).forEach(c => map[c] = true);
  return map;
};

const SCHEME = /^[a-z][a-z0-9+\-.]*:/;

const openURL = /*#__PURE__*/function () {
  var _ref = (0,C_proyecto_Ionic_Proyecto_semestral_proyecto_semestral_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (url, ev, direction, animation) {
    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {
      const router = document.querySelector('ion-router');

      if (router) {
        if (ev != null) {
          ev.preventDefault();
        }

        return router.push(url, direction, animation);
      }
    }

    return false;
  });

  return function openURL(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLWJ1dHRvbl8yX2VudHJ5X2pzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBSXFCLFVBQUo7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHLE1BQU07RUFDdkIsSUFBSSxPQUFPQyxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0lBQ2pDLE9BQU8sSUFBSUMsR0FBSixFQUFQO0VBQ0QsQ0FGRCxNQUdLO0lBQ0gsSUFBSSxDQUFDSCxVQUFMLEVBQWlCO01BQ2YsTUFBTUksR0FBRyxHQUFHRixNQUFaO01BQ0FFLEdBQUcsQ0FBQ0MsUUFBSixHQUFlRCxHQUFHLENBQUNDLFFBQUosSUFBZ0IsRUFBL0I7TUFDQUwsVUFBVSxHQUFHSSxHQUFHLENBQUNDLFFBQUosQ0FBYUMsR0FBYixHQUFtQkYsR0FBRyxDQUFDQyxRQUFKLENBQWFDLEdBQWIsSUFBb0IsSUFBSUgsR0FBSixFQUFwRDtJQUNEOztJQUNELE9BQU9ILFVBQVA7RUFDRDtBQUNGLENBWkQ7O0FBYUEsTUFBTU8sTUFBTSxHQUFJbkIsQ0FBRCxJQUFPO0VBQ3BCLElBQUlvQixHQUFHLEdBQUdDLE1BQU0sQ0FBQ3JCLENBQUMsQ0FBQ3NCLEdBQUgsQ0FBaEI7O0VBQ0EsSUFBSUYsR0FBSixFQUFTO0lBQ1AsT0FBT0EsR0FBUDtFQUNEOztFQUNEQSxHQUFHLEdBQUdHLE9BQU8sQ0FBQ3ZCLENBQUMsQ0FBQ3dCLElBQUgsRUFBU3hCLENBQUMsQ0FBQ3lCLElBQVgsRUFBaUJ6QixDQUFDLENBQUMwQixJQUFuQixFQUF5QjFCLENBQUMsQ0FBQzJCLEdBQTNCLEVBQWdDM0IsQ0FBQyxDQUFDNEIsRUFBbEMsQ0FBYjs7RUFDQSxJQUFJUixHQUFKLEVBQVM7SUFDUCxPQUFPUyxXQUFXLENBQUNULEdBQUQsQ0FBbEI7RUFDRDs7RUFDRCxJQUFJcEIsQ0FBQyxDQUFDeUIsSUFBTixF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QUMrSixNQUFNLENBQUMzSSxJQUFQLENBQVlwQixHQUFaLENBQXRDLEVBQXdEO01BQ3RELE1BQU1rSyxNQUFNLEdBQUd6RyxRQUFRLENBQUNZLGFBQVQsQ0FBdUIsWUFBdkIsQ0FBZjs7TUFDQSxJQUFJNkYsTUFBSixFQUFZO1FBQ1YsSUFBSWhILEVBQUUsSUFBSSxJQUFWLEVBQWdCO1VBQ2RBLEVBQUUsQ0FBQ0ssY0FBSDtRQUNEOztRQUNELE9BQU8yRyxNQUFNLENBQUNDLElBQVAsQ0FBWW5LLEdBQVosRUFBaUJnSyxTQUFqQixFQUE0QkMsU0FBNUIsQ0FBUDtNQUNEO0lBQ0Y7O0lBQ0QsT0FBTyxLQUFQO0VBQ0QsQ0FYWTs7RUFBQSxnQkFBUDdLLE9BQU87SUFBQTtFQUFBO0FBQUEsR0FBYiIsInNvdXJjZXMiOlsiLi9ub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvZGlzdC9lc20vaW9uLWJ1dHRvbl8yLmVudHJ5LmpzIiwiLi9ub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvZGlzdC9lc20vdGhlbWUtNzY3MDM0MWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiAoQykgSW9uaWMgaHR0cDovL2lvbmljZnJhbWV3b3JrLmNvbSAtIE1JVCBMaWNlbnNlXG4gKi9cbmltcG9ydCB7IGsgYXMgZ2V0QXNzZXRQYXRoLCByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGUgYXMgY3JlYXRlRXZlbnQsIGgsIEggYXMgSG9zdCwgaSBhcyBnZXRFbGVtZW50IH0gZnJvbSAnLi9pbmRleC0xYTk5YWViNy5qcyc7XG5pbXBvcnQgeyBiIGFzIGdldElvbk1vZGUkMSB9IGZyb20gJy4vaW9uaWMtZ2xvYmFsLTA0ZTI2OGU3LmpzJztcbmltcG9ydCB7IG0gYXMgaGFzU2hhZG93RG9tLCBpIGFzIGluaGVyaXRBcmlhQXR0cmlidXRlcyB9IGZyb20gJy4vaGVscGVycy00ZDI3MjM2MC5qcyc7XG5pbXBvcnQgeyBvIGFzIG9wZW5VUkwsIGMgYXMgY3JlYXRlQ29sb3JDbGFzc2VzJDEsIGggYXMgaG9zdENvbnRleHQgfSBmcm9tICcuL3RoZW1lLTc2NzAzNDFjLmpzJztcblxubGV0IENBQ0hFRF9NQVA7XG5jb25zdCBnZXRJY29uTWFwID0gKCkgPT4ge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbmV3IE1hcCgpO1xuICB9XG4gIGVsc2Uge1xuICAgIGlmICghQ0FDSEVEX01BUCkge1xuICAgICAgY29uc3Qgd2luID0gd2luZG93O1xuICAgICAgd2luLklvbmljb25zID0gd2luLklvbmljb25zIHx8IHt9O1xuICAgICAgQ0FDSEVEX01BUCA9IHdpbi5Jb25pY29ucy5tYXAgPSB3aW4uSW9uaWNvbnMubWFwIHx8IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgcmV0dXJuIENBQ0hFRF9NQVA7XG4gIH1cbn07XG5jb25zdCBnZXRVcmwgPSAoaSkgPT4ge1xuICBsZXQgdXJsID0gZ2V0U3JjKGkuc3JjKTtcbiAgaWYgKHVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgdXJsID0gZ2V0TmFtZShpLm5hbWUsIGkuaWNvbiwgaS5tb2RlLCBpLmlvcywgaS5tZCk7XG4gIGlmICh1cmwpIHtcbiAgICByZXR1cm4gZ2V0TmFtZWRVcmwodXJsKTtcbiAgfVxuICBpZiAoaS5pY29uKSB7XG4gICAgdXJsID0gZ2V0U3JjKGkuaWNvbik7XG4gICAgaWYgKHVybCkge1xuICAgICAgcmV0dXJuIHVybDtcbiAgICB9XG4gICAgdXJsID0gZ2V0U3JjKGkuaWNvbltpLm1vZGVdKTtcbiAgICBpZiAodXJsKSB7XG4gICAgICByZXR1cm4gdXJsO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5jb25zdCBnZXROYW1lZFVybCA9IChpY29uTmFtZSkgPT4ge1xuICBjb25zdCB1cmwgPSBnZXRJY29uTWFwKCkuZ2V0KGljb25OYW1lKTtcbiAgaWYgKHVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgcmV0dXJuIGdldEFzc2V0UGF0aChgc3ZnLyR7aWNvbk5hbWV9LnN2Z2ApO1xufTtcbmNvbnN0IGdldE5hbWUgPSAoaWNvbk5hbWUsIGljb24sIG1vZGUsIGlvcywgbWQpID0+IHtcbiAgLy8gZGVmYXVsdCB0byBcIm1kXCIgaWYgc29tZWhvdyB0aGUgbW9kZSB3YXNuJ3Qgc2V0XG4gIG1vZGUgPSAobW9kZSAmJiB0b0xvd2VyKG1vZGUpKSA9PT0gJ2lvcycgPyAnaW9zJyA6ICdtZCc7XG4gIC8vIGlmIGFuIGljb24gd2FzIHBhc3NlZCBpbiB1c2luZyB0aGUgaW9zIG9yIG1kIGF0dHJpYnV0ZXNcbiAgLy8gc2V0IHRoZSBpY29uTmFtZSB0byB3aGF0ZXZlciB3YXMgcGFzc2VkIGluXG4gIGlmIChpb3MgJiYgbW9kZSA9PT0gJ2lvcycpIHtcbiAgICBpY29uTmFtZSA9IHRvTG93ZXIoaW9zKTtcbiAgfVxuICBlbHNlIGlmIChtZCAmJiBtb2RlID09PSAnbWQnKSB7XG4gICAgaWNvbk5hbWUgPSB0b0xvd2VyKG1kKTtcbiAgfVxuICBlbHNlIHtcbiAgICBpZiAoIWljb25OYW1lICYmIGljb24gJiYgIWlzU3JjKGljb24pKSB7XG4gICAgICBpY29uTmFtZSA9IGljb247XG4gICAgfVxuICAgIGlmIChpc1N0cihpY29uTmFtZSkpIHtcbiAgICAgIGljb25OYW1lID0gdG9Mb3dlcihpY29uTmFtZSk7XG4gICAgfVxuICB9XG4gIGlmICghaXNTdHIoaWNvbk5hbWUpIHx8IGljb25OYW1lLnRyaW0oKSA9PT0gJycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAvLyBvbmx5IGFsbG93IGFscGhhIGNoYXJhY3RlcnMgYW5kIGRhc2hcbiAgY29uc3QgaW52YWxpZENoYXJzID0gaWNvbk5hbWUucmVwbGFjZSgvW2Etel18LXxcXGQvZ2ksICcnKTtcbiAgaWYgKGludmFsaWRDaGFycyAhPT0gJycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gaWNvbk5hbWU7XG59O1xuY29uc3QgZ2V0U3JjID0gKHNyYykgPT4ge1xuICBpZiAoaXNTdHIoc3JjKSkge1xuICAgIHNyYyA9IHNyYy50cmltKCk7XG4gICAgaWYgKGlzU3JjKHNyYykpIHtcbiAgICAgIHJldHVybiBzcmM7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufTtcbmNvbnN0IGlzU3JjID0gKHN0cikgPT4gc3RyLmxlbmd0aCA+IDAgJiYgLyhcXC98XFwuKS8udGVzdChzdHIpO1xuY29uc3QgaXNTdHIgPSAodmFsKSA9PiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJztcbmNvbnN0IHRvTG93ZXIgPSAodmFsKSA9PiB2YWwudG9Mb3dlckNhc2UoKTtcbi8qKlxuICogRWxlbWVudHMgaW5zaWRlIG9mIHdlYiBjb21wb25lbnRzIHNvbWV0aW1lcyBuZWVkIHRvIGluaGVyaXQgZ2xvYmFsIGF0dHJpYnV0ZXNcbiAqIHNldCBvbiB0aGUgaG9zdC4gRm9yIGV4YW1wbGUsIHRoZSBpbm5lciBpbnB1dCBpbiBgaW9uLWlucHV0YCBzaG91bGQgaW5oZXJpdFxuICogdGhlIGB0aXRsZWAgYXR0cmlidXRlIHRoYXQgZGV2ZWxvcGVycyBzZXQgZGlyZWN0bHkgb24gYGlvbi1pbnB1dGAuIFRoaXNcbiAqIGhlbHBlciBmdW5jdGlvbiBzaG91bGQgYmUgY2FsbGVkIGluIGNvbXBvbmVudFdpbGxMb2FkIGFuZCBhc3NpZ25lZCB0byBhIHZhcmlhYmxlXG4gKiB0aGF0IGlzIGxhdGVyIHVzZWQgaW4gdGhlIHJlbmRlciBmdW5jdGlvbi5cbiAqXG4gKiBUaGlzIGRvZXMgbm90IG5lZWQgdG8gYmUgcmVhY3RpdmUgYXMgY2hhbmdpbmcgYXR0cmlidXRlcyBvbiB0aGUgaG9zdCBlbGVtZW50XG4gKiBkb2VzIG5vdCB0cmlnZ2VyIGEgcmUtcmVuZGVyLlxuICovXG5jb25zdCBpbmhlcml0QXR0cmlidXRlcyA9IChlbCwgYXR0cmlidXRlcyA9IFtdKSA9PiB7XG4gIGNvbnN0IGF0dHJpYnV0ZU9iamVjdCA9IHt9O1xuICBhdHRyaWJ1dGVzLmZvckVhY2goYXR0ciA9PiB7XG4gICAgaWYgKGVsLmhhc0F0dHJpYnV0ZShhdHRyKSkge1xuICAgICAgY29uc3QgdmFsdWUgPSBlbC5nZXRBdHRyaWJ1dGUoYXR0cik7XG4gICAgICBpZiAodmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgYXR0cmlidXRlT2JqZWN0W2F0dHJdID0gZWwuZ2V0QXR0cmlidXRlKGF0dHIpO1xuICAgICAgfVxuICAgICAgZWwucmVtb3ZlQXR0cmlidXRlKGF0dHIpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBhdHRyaWJ1dGVPYmplY3Q7XG59O1xuXG5jb25zdCBidXR0b25Jb3NDc3MgPSBcIjpob3N0ey0tb3ZlcmZsb3c6aGlkZGVuOy0tcmlwcGxlLWNvbG9yOmN1cnJlbnRDb2xvcjstLWJvcmRlci13aWR0aDppbml0aWFsOy0tYm9yZGVyLWNvbG9yOmluaXRpYWw7LS1ib3JkZXItc3R5bGU6aW5pdGlhbDstLWNvbG9yLWFjdGl2YXRlZDp2YXIoLS1jb2xvcik7LS1jb2xvci1mb2N1c2VkOnZhcigtLWNvbG9yKTstLWNvbG9yLWhvdmVyOnZhcigtLWNvbG9yKTstLWJveC1zaGFkb3c6bm9uZTtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDphdXRvO2NvbG9yOnZhcigtLWNvbG9yKTtmb250LWZhbWlseTp2YXIoLS1pb24tZm9udC1mYW1pbHksIGluaGVyaXQpO3RleHQtYWxpZ246Y2VudGVyO3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt2ZXJ0aWNhbC1hbGlnbjp0b3A7dmVydGljYWwtYWxpZ246LXdlYmtpdC1iYXNlbGluZS1taWRkbGU7LXdlYmtpdC1mb250LWtlcm5pbmc6bm9uZTtmb250LWtlcm5pbmc6bm9uZX06aG9zdCguYnV0dG9uLWRpc2FibGVkKXtjdXJzb3I6ZGVmYXVsdDtvcGFjaXR5OjAuNTtwb2ludGVyLWV2ZW50czpub25lfTpob3N0KC5idXR0b24tc29saWQpey0tYmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7LS1jb2xvcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdCwgI2ZmZil9Omhvc3QoLmJ1dHRvbi1vdXRsaW5lKXstLWJvcmRlci1jb2xvcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7LS1iYWNrZ3JvdW5kOnRyYW5zcGFyZW50Oy0tY29sb3I6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpfTpob3N0KC5idXR0b24tY2xlYXIpey0tYm9yZGVyLXdpZHRoOjA7LS1iYWNrZ3JvdW5kOnRyYW5zcGFyZW50Oy0tY29sb3I6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpfTpob3N0KC5idXR0b24tYmxvY2spe2Rpc3BsYXk6YmxvY2t9Omhvc3QoLmJ1dHRvbi1ibG9jaykgLmJ1dHRvbi1uYXRpdmV7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7Y2xlYXI6Ym90aDtjb250YWluOmNvbnRlbnR9Omhvc3QoLmJ1dHRvbi1ibG9jaykgLmJ1dHRvbi1uYXRpdmU6OmFmdGVye2NsZWFyOmJvdGh9Omhvc3QoLmJ1dHRvbi1mdWxsKXtkaXNwbGF5OmJsb2NrfTpob3N0KC5idXR0b24tZnVsbCkgLmJ1dHRvbi1uYXRpdmV7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7Y29udGFpbjpjb250ZW50fTpob3N0KC5idXR0b24tZnVsbDpub3QoLmJ1dHRvbi1yb3VuZCkpIC5idXR0b24tbmF0aXZle2JvcmRlci1yYWRpdXM6MDtib3JkZXItcmlnaHQtd2lkdGg6MDtib3JkZXItbGVmdC13aWR0aDowfS5idXR0b24tbmF0aXZle2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlOy13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowO3BhZGRpbmctbGVmdDp2YXIoLS1wYWRkaW5nLXN0YXJ0KTtwYWRkaW5nLXJpZ2h0OnZhcigtLXBhZGRpbmctZW5kKTtwYWRkaW5nLXRvcDp2YXIoLS1wYWRkaW5nLXRvcCk7cGFkZGluZy1ib3R0b206dmFyKC0tcGFkZGluZy1ib3R0b20pO2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zaXplOmluaGVyaXQ7Zm9udC1zdHlsZTppbmhlcml0O2ZvbnQtd2VpZ2h0OmluaGVyaXQ7bGV0dGVyLXNwYWNpbmc6aW5oZXJpdDt0ZXh0LWRlY29yYXRpb246aW5oZXJpdDt0ZXh0LWluZGVudDppbmhlcml0O3RleHQtb3ZlcmZsb3c6aW5oZXJpdDt0ZXh0LXRyYW5zZm9ybTppbmhlcml0O3RleHQtYWxpZ246aW5oZXJpdDt3aGl0ZS1zcGFjZTppbmhlcml0O2NvbG9yOmluaGVyaXQ7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOy13ZWJraXQtdHJhbnNpdGlvbjp2YXIoLS10cmFuc2l0aW9uKTt0cmFuc2l0aW9uOnZhcigtLXRyYW5zaXRpb24pO2JvcmRlci13aWR0aDp2YXIoLS1ib3JkZXItd2lkdGgpO2JvcmRlci1zdHlsZTp2YXIoLS1ib3JkZXItc3R5bGUpO2JvcmRlci1jb2xvcjp2YXIoLS1ib3JkZXItY29sb3IpO291dGxpbmU6bm9uZTtiYWNrZ3JvdW5kOnZhcigtLWJhY2tncm91bmQpO2xpbmUtaGVpZ2h0OjE7LXdlYmtpdC1ib3gtc2hhZG93OnZhcigtLWJveC1zaGFkb3cpO2JveC1zaGFkb3c6dmFyKC0tYm94LXNoYWRvdyk7Y29udGFpbjpsYXlvdXQgc3R5bGU7Y3Vyc29yOnBvaW50ZXI7b3BhY2l0eTp2YXIoLS1vcGFjaXR5KTtvdmVyZmxvdzp2YXIoLS1vdmVyZmxvdyk7ei1pbmRleDowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9QHN1cHBvcnRzICgoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApIG9yIChtYXJnaW4taW5saW5lLXN0YXJ0OiAwKSkgb3IgKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKXsuYnV0dG9uLW5hdGl2ZXtwYWRkaW5nLWxlZnQ6dW5zZXQ7cGFkZGluZy1yaWdodDp1bnNldDstd2Via2l0LXBhZGRpbmctc3RhcnQ6dmFyKC0tcGFkZGluZy1zdGFydCk7cGFkZGluZy1pbmxpbmUtc3RhcnQ6dmFyKC0tcGFkZGluZy1zdGFydCk7LXdlYmtpdC1wYWRkaW5nLWVuZDp2YXIoLS1wYWRkaW5nLWVuZCk7cGFkZGluZy1pbmxpbmUtZW5kOnZhcigtLXBhZGRpbmctZW5kKX19LmJ1dHRvbi1uYXRpdmU6Oi1tb3otZm9jdXMtaW5uZXJ7Ym9yZGVyOjB9LmJ1dHRvbi1pbm5lcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleC1mbG93OnJvdyBub3dyYXA7ZmxleC1mbG93OnJvdyBub3dyYXA7LW1zLWZsZXgtbmVnYXRpdmU6MDtmbGV4LXNocmluazowOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3otaW5kZXg6MX06OnNsb3R0ZWQoaW9uLWljb24pe2ZvbnQtc2l6ZToxLjRlbTtwb2ludGVyLWV2ZW50czpub25lfTo6c2xvdHRlZChpb24taWNvbltzbG90PXN0YXJ0XSl7bWFyZ2luLWxlZnQ6LTAuM2VtO21hcmdpbi1yaWdodDowLjNlbTttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7OjpzbG90dGVkKGlvbi1pY29uW3Nsb3Q9c3RhcnRdKXttYXJnaW4tbGVmdDp1bnNldDttYXJnaW4tcmlnaHQ6dW5zZXQ7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6LTAuM2VtO21hcmdpbi1pbmxpbmUtc3RhcnQ6LTAuM2VtOy13ZWJraXQtbWFyZ2luLWVuZDowLjNlbTttYXJnaW4taW5saW5lLWVuZDowLjNlbX19OjpzbG90dGVkKGlvbi1pY29uW3Nsb3Q9ZW5kXSl7bWFyZ2luLWxlZnQ6MC4zZW07bWFyZ2luLXJpZ2h0Oi0wLjJlbTttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTowfUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7OjpzbG90dGVkKGlvbi1pY29uW3Nsb3Q9ZW5kXSl7bWFyZ2luLWxlZnQ6dW5zZXQ7bWFyZ2luLXJpZ2h0OnVuc2V0Oy13ZWJraXQtbWFyZ2luLXN0YXJ0OjAuM2VtO21hcmdpbi1pbmxpbmUtc3RhcnQ6MC4zZW07LXdlYmtpdC1tYXJnaW4tZW5kOi0wLjJlbTttYXJnaW4taW5saW5lLWVuZDotMC4yZW19fTo6c2xvdHRlZChpb24taWNvbltzbG90PWljb24tb25seV0pe2ZvbnQtc2l6ZToxLjhlbX1pb24tcmlwcGxlLWVmZmVjdHtjb2xvcjp2YXIoLS1yaXBwbGUtY29sb3IpfS5idXR0b24tbmF0aXZlOjphZnRlcntsZWZ0OjA7cmlnaHQ6MDt0b3A6MDtib3R0b206MDtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OlxcXCJcXFwiO29wYWNpdHk6MH06aG9zdCguaW9uLWFjdGl2YXRlZCl7Y29sb3I6dmFyKC0tY29sb3ItYWN0aXZhdGVkKX06aG9zdCguaW9uLWFjdGl2YXRlZCkgLmJ1dHRvbi1uYXRpdmU6OmFmdGVye2JhY2tncm91bmQ6dmFyKC0tYmFja2dyb3VuZC1hY3RpdmF0ZWQpO29wYWNpdHk6dmFyKC0tYmFja2dyb3VuZC1hY3RpdmF0ZWQtb3BhY2l0eSl9Omhvc3QoLmlvbi1mb2N1c2VkKXtjb2xvcjp2YXIoLS1jb2xvci1mb2N1c2VkKX06aG9zdCguaW9uLWZvY3VzZWQpIC5idXR0b24tbmF0aXZlOjphZnRlcntiYWNrZ3JvdW5kOnZhcigtLWJhY2tncm91bmQtZm9jdXNlZCk7b3BhY2l0eTp2YXIoLS1iYWNrZ3JvdW5kLWZvY3VzZWQtb3BhY2l0eSl9QG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKXs6aG9zdCg6aG92ZXIpe2NvbG9yOnZhcigtLWNvbG9yLWhvdmVyKX06aG9zdCg6aG92ZXIpIC5idXR0b24tbmF0aXZlOjphZnRlcntiYWNrZ3JvdW5kOnZhcigtLWJhY2tncm91bmQtaG92ZXIpO29wYWNpdHk6dmFyKC0tYmFja2dyb3VuZC1ob3Zlci1vcGFjaXR5KX19Omhvc3QoLmJ1dHRvbi1zb2xpZC5pb24tY29sb3IpIC5idXR0b24tbmF0aXZle2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLWJhc2UpO2NvbG9yOnZhcigtLWlvbi1jb2xvci1jb250cmFzdCl9Omhvc3QoLmJ1dHRvbi1vdXRsaW5lLmlvbi1jb2xvcikgLmJ1dHRvbi1uYXRpdmV7Ym9yZGVyLWNvbG9yOnZhcigtLWlvbi1jb2xvci1iYXNlKTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2NvbG9yOnZhcigtLWlvbi1jb2xvci1iYXNlKX06aG9zdCguYnV0dG9uLWNsZWFyLmlvbi1jb2xvcikgLmJ1dHRvbi1uYXRpdmV7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtjb2xvcjp2YXIoLS1pb24tY29sb3ItYmFzZSl9Omhvc3QoLmluLXRvb2xiYXI6bm90KC5pb24tY29sb3IpOm5vdCguaW4tdG9vbGJhci1jb2xvcikpIC5idXR0b24tbmF0aXZle2NvbG9yOnZhcigtLWlvbi10b29sYmFyLWNvbG9yLCB2YXIoLS1jb2xvcikpfTpob3N0KC5idXR0b24tb3V0bGluZS5pbi10b29sYmFyOm5vdCguaW9uLWNvbG9yKTpub3QoLmluLXRvb2xiYXItY29sb3IpKSAuYnV0dG9uLW5hdGl2ZXtib3JkZXItY29sb3I6dmFyKC0taW9uLXRvb2xiYXItY29sb3IsIHZhcigtLWNvbG9yLCB2YXIoLS1ib3JkZXItY29sb3IpKSl9Omhvc3QoLmJ1dHRvbi1zb2xpZC5pbi10b29sYmFyOm5vdCguaW9uLWNvbG9yKTpub3QoLmluLXRvb2xiYXItY29sb3IpKSAuYnV0dG9uLW5hdGl2ZXtiYWNrZ3JvdW5kOnZhcigtLWlvbi10b29sYmFyLWNvbG9yLCB2YXIoLS1iYWNrZ3JvdW5kKSk7Y29sb3I6dmFyKC0taW9uLXRvb2xiYXItYmFja2dyb3VuZCwgdmFyKC0tY29sb3IpKX06aG9zdHstLWJvcmRlci1yYWRpdXM6MTBweDstLXBhZGRpbmctdG9wOjA7LS1wYWRkaW5nLWJvdHRvbTowOy0tcGFkZGluZy1zdGFydDoxZW07LS1wYWRkaW5nLWVuZDoxZW07LS10cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IsIG9wYWNpdHkgMTAwbXMgbGluZWFyO21hcmdpbi1sZWZ0OjJweDttYXJnaW4tcmlnaHQ6MnB4O21hcmdpbi10b3A6NHB4O21hcmdpbi1ib3R0b206NHB4O2hlaWdodDoyLjhlbTtmb250LXNpemU6MTZweDtmb250LXdlaWdodDo1MDA7bGV0dGVyLXNwYWNpbmc6LTAuMDNlbX1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApezpob3N0e21hcmdpbi1sZWZ0OnVuc2V0O21hcmdpbi1yaWdodDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDoycHg7bWFyZ2luLWlubGluZS1zdGFydDoycHg7LXdlYmtpdC1tYXJnaW4tZW5kOjJweDttYXJnaW4taW5saW5lLWVuZDoycHh9fTpob3N0KC5idXR0b24tc29saWQpey0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnktc2hhZGUsICMzMTcxZTApOy0tYmFja2dyb3VuZC1mb2N1c2VkOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LXNoYWRlLCAjMzE3MWUwKTstLWJhY2tncm91bmQtaG92ZXI6dmFyKC0taW9uLWNvbG9yLXByaW1hcnktdGludCwgIzRjOGRmZik7LS1iYWNrZ3JvdW5kLWFjdGl2YXRlZC1vcGFjaXR5OjE7LS1iYWNrZ3JvdW5kLWZvY3VzZWQtb3BhY2l0eToxOy0tYmFja2dyb3VuZC1ob3Zlci1vcGFjaXR5OjF9Omhvc3QoLmJ1dHRvbi1vdXRsaW5lKXstLWJvcmRlci1yYWRpdXM6MTBweDstLWJvcmRlci13aWR0aDoxcHg7LS1ib3JkZXItc3R5bGU6c29saWQ7LS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7LS1iYWNrZ3JvdW5kLWZvY3VzZWQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpOy0tYmFja2dyb3VuZC1ob3Zlcjp0cmFuc3BhcmVudDstLWJhY2tncm91bmQtZm9jdXNlZC1vcGFjaXR5Oi4xOy0tY29sb3ItYWN0aXZhdGVkOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LWNvbnRyYXN0LCAjZmZmKX06aG9zdCguYnV0dG9uLWNsZWFyKXstLWJhY2tncm91bmQtYWN0aXZhdGVkOnRyYW5zcGFyZW50Oy0tYmFja2dyb3VuZC1mb2N1c2VkOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKTstLWJhY2tncm91bmQtaG92ZXI6dHJhbnNwYXJlbnQ7LS1iYWNrZ3JvdW5kLWZvY3VzZWQtb3BhY2l0eTouMTtmb250LXNpemU6MTdweDtmb250LXdlaWdodDpub3JtYWw7bGV0dGVyLXNwYWNpbmc6MH06aG9zdCguYnV0dG9uLWxhcmdlKXstLWJvcmRlci1yYWRpdXM6MTJweDstLXBhZGRpbmctdG9wOjA7LS1wYWRkaW5nLXN0YXJ0OjFlbTstLXBhZGRpbmctZW5kOjFlbTstLXBhZGRpbmctYm90dG9tOjA7aGVpZ2h0OjIuOGVtO2ZvbnQtc2l6ZToyMHB4fTpob3N0KC5idXR0b24tc21hbGwpey0tYm9yZGVyLXJhZGl1czo2cHg7LS1wYWRkaW5nLXRvcDowOy0tcGFkZGluZy1zdGFydDowLjllbTstLXBhZGRpbmctZW5kOjAuOWVtOy0tcGFkZGluZy1ib3R0b206MDtoZWlnaHQ6Mi4xZW07Zm9udC1zaXplOjEzcHh9Omhvc3QoLmJ1dHRvbi1yb3VuZCl7LS1ib3JkZXItcmFkaXVzOjY0cHg7LS1wYWRkaW5nLXRvcDowOy0tcGFkZGluZy1zdGFydDoyNnB4Oy0tcGFkZGluZy1lbmQ6MjZweDstLXBhZGRpbmctYm90dG9tOjB9Omhvc3QoLmJ1dHRvbi1zdHJvbmcpe2ZvbnQtd2VpZ2h0OjYwMH06aG9zdCguYnV0dG9uLWNsZWFyLmlvbi1hY3RpdmF0ZWQpe29wYWNpdHk6MC40fTpob3N0KC5idXR0b24tb3V0bGluZS5pb24tYWN0aXZhdGVkLmlvbi1jb2xvcikgLmJ1dHRvbi1uYXRpdmV7Y29sb3I6dmFyKC0taW9uLWNvbG9yLWNvbnRyYXN0KX06aG9zdCguYnV0dG9uLW91dGxpbmUuaW9uLWFjdGl2YXRlZC5pb24tY29sb3IpIC5idXR0b24tbmF0aXZlOjphZnRlcntiYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1iYXNlKX06aG9zdCguYnV0dG9uLXNvbGlkLmlvbi1jb2xvci5pb24tYWN0aXZhdGVkKSAuYnV0dG9uLW5hdGl2ZTo6YWZ0ZXJ7YmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3Itc2hhZGUpfTpob3N0KC5idXR0b24tb3V0bGluZS5pb24tZm9jdXNlZC5pb24tY29sb3IpIC5idXR0b24tbmF0aXZlLDpob3N0KC5idXR0b24tY2xlYXIuaW9uLWZvY3VzZWQuaW9uLWNvbG9yKSAuYnV0dG9uLW5hdGl2ZXtjb2xvcjp2YXIoLS1pb24tY29sb3ItYmFzZSl9Omhvc3QoLmJ1dHRvbi1vdXRsaW5lLmlvbi1mb2N1c2VkLmlvbi1jb2xvcikgLmJ1dHRvbi1uYXRpdmU6OmFmdGVyLDpob3N0KC5idXR0b24tY2xlYXIuaW9uLWZvY3VzZWQuaW9uLWNvbG9yKSAuYnV0dG9uLW5hdGl2ZTo6YWZ0ZXJ7YmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3ItYmFzZSl9Omhvc3QoLmJ1dHRvbi1zb2xpZC5pb24tY29sb3IuaW9uLWZvY3VzZWQpIC5idXR0b24tbmF0aXZlOjphZnRlcntiYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1zaGFkZSl9QG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKXs6aG9zdCguYnV0dG9uLWNsZWFyOmhvdmVyKSw6aG9zdCguYnV0dG9uLW91dGxpbmU6aG92ZXIpe29wYWNpdHk6MC42fTpob3N0KC5idXR0b24tY2xlYXIuaW9uLWNvbG9yOmhvdmVyKSAuYnV0dG9uLW5hdGl2ZSw6aG9zdCguYnV0dG9uLW91dGxpbmUuaW9uLWNvbG9yOmhvdmVyKSAuYnV0dG9uLW5hdGl2ZXtjb2xvcjp2YXIoLS1pb24tY29sb3ItYmFzZSl9Omhvc3QoLmJ1dHRvbi1jbGVhci5pb24tY29sb3I6aG92ZXIpIC5idXR0b24tbmF0aXZlOjphZnRlciw6aG9zdCguYnV0dG9uLW91dGxpbmUuaW9uLWNvbG9yOmhvdmVyKSAuYnV0dG9uLW5hdGl2ZTo6YWZ0ZXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH06aG9zdCguYnV0dG9uLXNvbGlkLmlvbi1jb2xvcjpob3ZlcikgLmJ1dHRvbi1uYXRpdmU6OmFmdGVye2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLXRpbnQpfTpob3N0KDpob3Zlci5idXR0b24tc29saWQuaW4tdG9vbGJhcjpub3QoLmlvbi1jb2xvcik6bm90KC5pbi10b29sYmFyLWNvbG9yKSkgLmJ1dHRvbi1uYXRpdmU6OmFmdGVye2JhY2tncm91bmQ6I2ZmZjtvcGFjaXR5OjAuMX19XCI7XG5cbmNvbnN0IGJ1dHRvbk1kQ3NzID0gXCI6aG9zdHstLW92ZXJmbG93OmhpZGRlbjstLXJpcHBsZS1jb2xvcjpjdXJyZW50Q29sb3I7LS1ib3JkZXItd2lkdGg6aW5pdGlhbDstLWJvcmRlci1jb2xvcjppbml0aWFsOy0tYm9yZGVyLXN0eWxlOmluaXRpYWw7LS1jb2xvci1hY3RpdmF0ZWQ6dmFyKC0tY29sb3IpOy0tY29sb3ItZm9jdXNlZDp2YXIoLS1jb2xvcik7LS1jb2xvci1ob3Zlcjp2YXIoLS1jb2xvcik7LS1ib3gtc2hhZG93Om5vbmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6YXV0bztjb2xvcjp2YXIoLS1jb2xvcik7Zm9udC1mYW1pbHk6dmFyKC0taW9uLWZvbnQtZmFtaWx5LCBpbmhlcml0KTt0ZXh0LWFsaWduOmNlbnRlcjt0ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7dmVydGljYWwtYWxpZ246dG9wO3ZlcnRpY2FsLWFsaWduOi13ZWJraXQtYmFzZWxpbmUtbWlkZGxlOy13ZWJraXQtZm9udC1rZXJuaW5nOm5vbmU7Zm9udC1rZXJuaW5nOm5vbmV9Omhvc3QoLmJ1dHRvbi1kaXNhYmxlZCl7Y3Vyc29yOmRlZmF1bHQ7b3BhY2l0eTowLjU7cG9pbnRlci1ldmVudHM6bm9uZX06aG9zdCguYnV0dG9uLXNvbGlkKXstLWJhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpOy0tY29sb3I6dmFyKC0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QsICNmZmYpfTpob3N0KC5idXR0b24tb3V0bGluZSl7LS1ib3JkZXItY29sb3I6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpOy0tYmFja2dyb3VuZDp0cmFuc3BhcmVudDstLWNvbG9yOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKX06aG9zdCguYnV0dG9uLWNsZWFyKXstLWJvcmRlci13aWR0aDowOy0tYmFja2dyb3VuZDp0cmFuc3BhcmVudDstLWNvbG9yOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKX06aG9zdCguYnV0dG9uLWJsb2NrKXtkaXNwbGF5OmJsb2NrfTpob3N0KC5idXR0b24tYmxvY2spIC5idXR0b24tbmF0aXZle21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2NsZWFyOmJvdGg7Y29udGFpbjpjb250ZW50fTpob3N0KC5idXR0b24tYmxvY2spIC5idXR0b24tbmF0aXZlOjphZnRlcntjbGVhcjpib3RofTpob3N0KC5idXR0b24tZnVsbCl7ZGlzcGxheTpibG9ja306aG9zdCguYnV0dG9uLWZ1bGwpIC5idXR0b24tbmF0aXZle21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2NvbnRhaW46Y29udGVudH06aG9zdCguYnV0dG9uLWZ1bGw6bm90KC5idXR0b24tcm91bmQpKSAuYnV0dG9uLW5hdGl2ZXtib3JkZXItcmFkaXVzOjA7Ym9yZGVyLXJpZ2h0LXdpZHRoOjA7Ym9yZGVyLWxlZnQtd2lkdGg6MH0uYnV0dG9uLW5hdGl2ZXtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpOy1tb3otb3N4LWZvbnQtc21vb3RoaW5nOmdyYXlzY2FsZTstd2Via2l0LWZvbnQtc21vb3RoaW5nOmFudGlhbGlhc2VkO21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MDtwYWRkaW5nLWxlZnQ6dmFyKC0tcGFkZGluZy1zdGFydCk7cGFkZGluZy1yaWdodDp2YXIoLS1wYWRkaW5nLWVuZCk7cGFkZGluZy10b3A6dmFyKC0tcGFkZGluZy10b3ApO3BhZGRpbmctYm90dG9tOnZhcigtLXBhZGRpbmctYm90dG9tKTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtc3R5bGU6aW5oZXJpdDtmb250LXdlaWdodDppbmhlcml0O2xldHRlci1zcGFjaW5nOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOmluaGVyaXQ7dGV4dC1pbmRlbnQ6aW5oZXJpdDt0ZXh0LW92ZXJmbG93OmluaGVyaXQ7dGV4dC10cmFuc2Zvcm06aW5oZXJpdDt0ZXh0LWFsaWduOmluaGVyaXQ7d2hpdGUtc3BhY2U6aW5oZXJpdDtjb2xvcjppbmhlcml0O2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTstd2Via2l0LXRyYW5zaXRpb246dmFyKC0tdHJhbnNpdGlvbik7dHJhbnNpdGlvbjp2YXIoLS10cmFuc2l0aW9uKTtib3JkZXItd2lkdGg6dmFyKC0tYm9yZGVyLXdpZHRoKTtib3JkZXItc3R5bGU6dmFyKC0tYm9yZGVyLXN0eWxlKTtib3JkZXItY29sb3I6dmFyKC0tYm9yZGVyLWNvbG9yKTtvdXRsaW5lOm5vbmU7YmFja2dyb3VuZDp2YXIoLS1iYWNrZ3JvdW5kKTtsaW5lLWhlaWdodDoxOy13ZWJraXQtYm94LXNoYWRvdzp2YXIoLS1ib3gtc2hhZG93KTtib3gtc2hhZG93OnZhcigtLWJveC1zaGFkb3cpO2NvbnRhaW46bGF5b3V0IHN0eWxlO2N1cnNvcjpwb2ludGVyO29wYWNpdHk6dmFyKC0tb3BhY2l0eSk7b3ZlcmZsb3c6dmFyKC0tb3ZlcmZsb3cpO3otaW5kZXg6MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfUBzdXBwb3J0cyAoKC13ZWJraXQtbWFyZ2luLXN0YXJ0OiAwKSBvciAobWFyZ2luLWlubGluZS1zdGFydDogMCkpIG9yICgtd2Via2l0LW1hcmdpbi1zdGFydDogMCl7LmJ1dHRvbi1uYXRpdmV7cGFkZGluZy1sZWZ0OnVuc2V0O3BhZGRpbmctcmlnaHQ6dW5zZXQ7LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OnZhcigtLXBhZGRpbmctc3RhcnQpO3BhZGRpbmctaW5saW5lLXN0YXJ0OnZhcigtLXBhZGRpbmctc3RhcnQpOy13ZWJraXQtcGFkZGluZy1lbmQ6dmFyKC0tcGFkZGluZy1lbmQpO3BhZGRpbmctaW5saW5lLWVuZDp2YXIoLS1wYWRkaW5nLWVuZCl9fS5idXR0b24tbmF0aXZlOjotbW96LWZvY3VzLWlubmVye2JvcmRlcjowfS5idXR0b24taW5uZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXgtZmxvdzpyb3cgbm93cmFwO2ZsZXgtZmxvdzpyb3cgbm93cmFwOy1tcy1mbGV4LW5lZ2F0aXZlOjA7ZmxleC1zaHJpbms6MDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt6LWluZGV4OjF9OjpzbG90dGVkKGlvbi1pY29uKXtmb250LXNpemU6MS40ZW07cG9pbnRlci1ldmVudHM6bm9uZX06OnNsb3R0ZWQoaW9uLWljb25bc2xvdD1zdGFydF0pe21hcmdpbi1sZWZ0Oi0wLjNlbTttYXJnaW4tcmlnaHQ6MC4zZW07bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApezo6c2xvdHRlZChpb24taWNvbltzbG90PXN0YXJ0XSl7bWFyZ2luLWxlZnQ6dW5zZXQ7bWFyZ2luLXJpZ2h0OnVuc2V0Oy13ZWJraXQtbWFyZ2luLXN0YXJ0Oi0wLjNlbTttYXJnaW4taW5saW5lLXN0YXJ0Oi0wLjNlbTstd2Via2l0LW1hcmdpbi1lbmQ6MC4zZW07bWFyZ2luLWlubGluZS1lbmQ6MC4zZW19fTo6c2xvdHRlZChpb24taWNvbltzbG90PWVuZF0pe21hcmdpbi1sZWZ0OjAuM2VtO21hcmdpbi1yaWdodDotMC4yZW07bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApezo6c2xvdHRlZChpb24taWNvbltzbG90PWVuZF0pe21hcmdpbi1sZWZ0OnVuc2V0O21hcmdpbi1yaWdodDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDowLjNlbTttYXJnaW4taW5saW5lLXN0YXJ0OjAuM2VtOy13ZWJraXQtbWFyZ2luLWVuZDotMC4yZW07bWFyZ2luLWlubGluZS1lbmQ6LTAuMmVtfX06OnNsb3R0ZWQoaW9uLWljb25bc2xvdD1pY29uLW9ubHldKXtmb250LXNpemU6MS44ZW19aW9uLXJpcHBsZS1lZmZlY3R7Y29sb3I6dmFyKC0tcmlwcGxlLWNvbG9yKX0uYnV0dG9uLW5hdGl2ZTo6YWZ0ZXJ7bGVmdDowO3JpZ2h0OjA7dG9wOjA7Ym90dG9tOjA7cG9zaXRpb246YWJzb2x1dGU7Y29udGVudDpcXFwiXFxcIjtvcGFjaXR5OjB9Omhvc3QoLmlvbi1hY3RpdmF0ZWQpe2NvbG9yOnZhcigtLWNvbG9yLWFjdGl2YXRlZCl9Omhvc3QoLmlvbi1hY3RpdmF0ZWQpIC5idXR0b24tbmF0aXZlOjphZnRlcntiYWNrZ3JvdW5kOnZhcigtLWJhY2tncm91bmQtYWN0aXZhdGVkKTtvcGFjaXR5OnZhcigtLWJhY2tncm91bmQtYWN0aXZhdGVkLW9wYWNpdHkpfTpob3N0KC5pb24tZm9jdXNlZCl7Y29sb3I6dmFyKC0tY29sb3ItZm9jdXNlZCl9Omhvc3QoLmlvbi1mb2N1c2VkKSAuYnV0dG9uLW5hdGl2ZTo6YWZ0ZXJ7YmFja2dyb3VuZDp2YXIoLS1iYWNrZ3JvdW5kLWZvY3VzZWQpO29wYWNpdHk6dmFyKC0tYmFja2dyb3VuZC1mb2N1c2VkLW9wYWNpdHkpfUBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcil7Omhvc3QoOmhvdmVyKXtjb2xvcjp2YXIoLS1jb2xvci1ob3Zlcil9Omhvc3QoOmhvdmVyKSAuYnV0dG9uLW5hdGl2ZTo6YWZ0ZXJ7YmFja2dyb3VuZDp2YXIoLS1iYWNrZ3JvdW5kLWhvdmVyKTtvcGFjaXR5OnZhcigtLWJhY2tncm91bmQtaG92ZXItb3BhY2l0eSl9fTpob3N0KC5idXR0b24tc29saWQuaW9uLWNvbG9yKSAuYnV0dG9uLW5hdGl2ZXtiYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1iYXNlKTtjb2xvcjp2YXIoLS1pb24tY29sb3ItY29udHJhc3QpfTpob3N0KC5idXR0b24tb3V0bGluZS5pb24tY29sb3IpIC5idXR0b24tbmF0aXZle2JvcmRlci1jb2xvcjp2YXIoLS1pb24tY29sb3ItYmFzZSk7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtjb2xvcjp2YXIoLS1pb24tY29sb3ItYmFzZSl9Omhvc3QoLmJ1dHRvbi1jbGVhci5pb24tY29sb3IpIC5idXR0b24tbmF0aXZle2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Y29sb3I6dmFyKC0taW9uLWNvbG9yLWJhc2UpfTpob3N0KC5pbi10b29sYmFyOm5vdCguaW9uLWNvbG9yKTpub3QoLmluLXRvb2xiYXItY29sb3IpKSAuYnV0dG9uLW5hdGl2ZXtjb2xvcjp2YXIoLS1pb24tdG9vbGJhci1jb2xvciwgdmFyKC0tY29sb3IpKX06aG9zdCguYnV0dG9uLW91dGxpbmUuaW4tdG9vbGJhcjpub3QoLmlvbi1jb2xvcik6bm90KC5pbi10b29sYmFyLWNvbG9yKSkgLmJ1dHRvbi1uYXRpdmV7Ym9yZGVyLWNvbG9yOnZhcigtLWlvbi10b29sYmFyLWNvbG9yLCB2YXIoLS1jb2xvciwgdmFyKC0tYm9yZGVyLWNvbG9yKSkpfTpob3N0KC5idXR0b24tc29saWQuaW4tdG9vbGJhcjpub3QoLmlvbi1jb2xvcik6bm90KC5pbi10b29sYmFyLWNvbG9yKSkgLmJ1dHRvbi1uYXRpdmV7YmFja2dyb3VuZDp2YXIoLS1pb24tdG9vbGJhci1jb2xvciwgdmFyKC0tYmFja2dyb3VuZCkpO2NvbG9yOnZhcigtLWlvbi10b29sYmFyLWJhY2tncm91bmQsIHZhcigtLWNvbG9yKSl9Omhvc3R7LS1ib3JkZXItcmFkaXVzOjRweDstLXBhZGRpbmctdG9wOjA7LS1wYWRkaW5nLWJvdHRvbTowOy0tcGFkZGluZy1zdGFydDoxLjFlbTstLXBhZGRpbmctZW5kOjEuMWVtOy0tdHJhbnNpdGlvbjpib3gtc2hhZG93IDI4MG1zIGN1YmljLWJlemllciguNCwgMCwgLjIsIDEpLFxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yIDE1bXMgbGluZWFyLFxcbiAgICAgICAgICAgICAgICBjb2xvciAxNW1zIGxpbmVhcjttYXJnaW4tbGVmdDoycHg7bWFyZ2luLXJpZ2h0OjJweDttYXJnaW4tdG9wOjRweDttYXJnaW4tYm90dG9tOjRweDtoZWlnaHQ6MzZweDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo1MDA7bGV0dGVyLXNwYWNpbmc6MC4wNmVtO3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZX1Ac3VwcG9ydHMgKCgtd2Via2l0LW1hcmdpbi1zdGFydDogMCkgb3IgKG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDApKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApezpob3N0e21hcmdpbi1sZWZ0OnVuc2V0O21hcmdpbi1yaWdodDp1bnNldDstd2Via2l0LW1hcmdpbi1zdGFydDoycHg7bWFyZ2luLWlubGluZS1zdGFydDoycHg7LXdlYmtpdC1tYXJnaW4tZW5kOjJweDttYXJnaW4taW5saW5lLWVuZDoycHh9fTpob3N0KC5idXR0b24tc29saWQpey0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6dHJhbnNwYXJlbnQ7LS1iYWNrZ3JvdW5kLWhvdmVyOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LWNvbnRyYXN0LCAjZmZmKTstLWJhY2tncm91bmQtZm9jdXNlZDp2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdCwgI2ZmZik7LS1iYWNrZ3JvdW5kLWFjdGl2YXRlZC1vcGFjaXR5OjA7LS1iYWNrZ3JvdW5kLWZvY3VzZWQtb3BhY2l0eTouMjQ7LS1iYWNrZ3JvdW5kLWhvdmVyLW9wYWNpdHk6LjA4Oy0tYm94LXNoYWRvdzowIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMil9Omhvc3QoLmJ1dHRvbi1zb2xpZC5pb24tYWN0aXZhdGVkKXstLWJveC1zaGFkb3c6MCA1cHggNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpfTpob3N0KC5idXR0b24tb3V0bGluZSl7LS1ib3JkZXItd2lkdGg6MnB4Oy0tYm9yZGVyLXN0eWxlOnNvbGlkOy0tYm94LXNoYWRvdzpub25lOy0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6dHJhbnNwYXJlbnQ7LS1iYWNrZ3JvdW5kLWZvY3VzZWQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpOy0tYmFja2dyb3VuZC1ob3Zlcjp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7LS1iYWNrZ3JvdW5kLWFjdGl2YXRlZC1vcGFjaXR5OjA7LS1iYWNrZ3JvdW5kLWZvY3VzZWQtb3BhY2l0eTouMTI7LS1iYWNrZ3JvdW5kLWhvdmVyLW9wYWNpdHk6LjA0fTpob3N0KC5idXR0b24tb3V0bGluZS5pb24tYWN0aXZhdGVkLmlvbi1jb2xvcikgLmJ1dHRvbi1uYXRpdmV7YmFja2dyb3VuZDp0cmFuc3BhcmVudH06aG9zdCguYnV0dG9uLWNsZWFyKXstLWJhY2tncm91bmQtYWN0aXZhdGVkOnRyYW5zcGFyZW50Oy0tYmFja2dyb3VuZC1mb2N1c2VkOnZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKTstLWJhY2tncm91bmQtaG92ZXI6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpOy0tYmFja2dyb3VuZC1hY3RpdmF0ZWQtb3BhY2l0eTowOy0tYmFja2dyb3VuZC1mb2N1c2VkLW9wYWNpdHk6LjEyOy0tYmFja2dyb3VuZC1ob3Zlci1vcGFjaXR5Oi4wNH06aG9zdCguYnV0dG9uLXJvdW5kKXstLWJvcmRlci1yYWRpdXM6NjRweDstLXBhZGRpbmctdG9wOjA7LS1wYWRkaW5nLXN0YXJ0OjI2cHg7LS1wYWRkaW5nLWVuZDoyNnB4Oy0tcGFkZGluZy1ib3R0b206MH06aG9zdCguYnV0dG9uLWxhcmdlKXstLXBhZGRpbmctdG9wOjA7LS1wYWRkaW5nLXN0YXJ0OjFlbTstLXBhZGRpbmctZW5kOjFlbTstLXBhZGRpbmctYm90dG9tOjA7aGVpZ2h0OjIuOGVtO2ZvbnQtc2l6ZToyMHB4fTpob3N0KC5idXR0b24tc21hbGwpey0tcGFkZGluZy10b3A6MDstLXBhZGRpbmctc3RhcnQ6MC45ZW07LS1wYWRkaW5nLWVuZDowLjllbTstLXBhZGRpbmctYm90dG9tOjA7aGVpZ2h0OjIuMWVtO2ZvbnQtc2l6ZToxM3B4fTpob3N0KC5idXR0b24tc3Ryb25nKXtmb250LXdlaWdodDpib2xkfTo6c2xvdHRlZChpb24taWNvbltzbG90PWljb24tb25seV0pe3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLXRvcDowO3BhZGRpbmctYm90dG9tOjB9Omhvc3QoLmJ1dHRvbi1zb2xpZC5pb24tY29sb3IuaW9uLWZvY3VzZWQpIC5idXR0b24tbmF0aXZlOjphZnRlcntiYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1jb250cmFzdCl9Omhvc3QoLmJ1dHRvbi1jbGVhci5pb24tY29sb3IuaW9uLWZvY3VzZWQpIC5idXR0b24tbmF0aXZlOjphZnRlciw6aG9zdCguYnV0dG9uLW91dGxpbmUuaW9uLWNvbG9yLmlvbi1mb2N1c2VkKSAuYnV0dG9uLW5hdGl2ZTo6YWZ0ZXJ7YmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3ItYmFzZSl9QG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKXs6aG9zdCguYnV0dG9uLXNvbGlkLmlvbi1jb2xvcjpob3ZlcikgLmJ1dHRvbi1uYXRpdmU6OmFmdGVye2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLWNvbnRyYXN0KX06aG9zdCguYnV0dG9uLWNsZWFyLmlvbi1jb2xvcjpob3ZlcikgLmJ1dHRvbi1uYXRpdmU6OmFmdGVyLDpob3N0KC5idXR0b24tb3V0bGluZS5pb24tY29sb3I6aG92ZXIpIC5idXR0b24tbmF0aXZlOjphZnRlcntiYWNrZ3JvdW5kOnZhcigtLWlvbi1jb2xvci1iYXNlKX19XCI7XG5cbmNvbnN0IEJ1dHRvbiA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoaG9zdFJlZikge1xuICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XG4gICAgdGhpcy5pb25Gb2N1cyA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uRm9jdXNcIiwgNyk7XG4gICAgdGhpcy5pb25CbHVyID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25CbHVyXCIsIDcpO1xuICAgIHRoaXMuaW5JdGVtID0gZmFsc2U7XG4gICAgdGhpcy5pbkxpc3RIZWFkZXIgPSBmYWxzZTtcbiAgICB0aGlzLmluVG9vbGJhciA9IGZhbHNlO1xuICAgIHRoaXMuaW5oZXJpdGVkQXR0cmlidXRlcyA9IHt9O1xuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIG9mIGJ1dHRvbi5cbiAgICAgKi9cbiAgICB0aGlzLmJ1dHRvblR5cGUgPSAnYnV0dG9uJztcbiAgICAvKipcbiAgICAgKiBJZiBgdHJ1ZWAsIHRoZSB1c2VyIGNhbm5vdCBpbnRlcmFjdCB3aXRoIHRoZSBidXR0b24uXG4gICAgICovXG4gICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIC8qKlxuICAgICAqIFdoZW4gdXNpbmcgYSByb3V0ZXIsIGl0IHNwZWNpZmllcyB0aGUgdHJhbnNpdGlvbiBkaXJlY3Rpb24gd2hlbiBuYXZpZ2F0aW5nIHRvXG4gICAgICogYW5vdGhlciBwYWdlIHVzaW5nIGBocmVmYC5cbiAgICAgKi9cbiAgICB0aGlzLnJvdXRlckRpcmVjdGlvbiA9ICdmb3J3YXJkJztcbiAgICAvKipcbiAgICAgKiBJZiBgdHJ1ZWAsIGFjdGl2YXRlcyBhIGJ1dHRvbiB3aXRoIGEgaGVhdmllciBmb250IHdlaWdodC5cbiAgICAgKi9cbiAgICB0aGlzLnN0cm9uZyA9IGZhbHNlO1xuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIG9mIHRoZSBidXR0b24uXG4gICAgICovXG4gICAgdGhpcy50eXBlID0gJ2J1dHRvbic7XG4gICAgdGhpcy5oYW5kbGVDbGljayA9IChldikgPT4ge1xuICAgICAgaWYgKHRoaXMudHlwZSA9PT0gJ2J1dHRvbicpIHtcbiAgICAgICAgb3BlblVSTCh0aGlzLmhyZWYsIGV2LCB0aGlzLnJvdXRlckRpcmVjdGlvbiwgdGhpcy5yb3V0ZXJBbmltYXRpb24pO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoaGFzU2hhZG93RG9tKHRoaXMuZWwpKSB7XG4gICAgICAgIC8vIHRoaXMgYnV0dG9uIHdhbnRzIHRvIHNwZWNpZmljYWxseSBzdWJtaXQgYSBmb3JtXG4gICAgICAgIC8vIGNsaW1iIHVwIHRoZSBkb20gdG8gc2VlIGlmIHdlJ3JlIGluIGEgPGZvcm0+XG4gICAgICAgIC8vIGFuZCBpZiBzbywgdGhlbiB1c2UgSlMgdG8gc3VibWl0IGl0XG4gICAgICAgIGNvbnN0IGZvcm0gPSB0aGlzLmVsLmNsb3Nlc3QoJ2Zvcm0nKTtcbiAgICAgICAgaWYgKGZvcm0pIHtcbiAgICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIGNvbnN0IGZha2VCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgICBmYWtlQnV0dG9uLnR5cGUgPSB0aGlzLnR5cGU7XG4gICAgICAgICAgZmFrZUJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoZmFrZUJ1dHRvbik7XG4gICAgICAgICAgZmFrZUJ1dHRvbi5jbGljaygpO1xuICAgICAgICAgIGZha2VCdXR0b24ucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMub25Gb2N1cyA9ICgpID0+IHtcbiAgICAgIHRoaXMuaW9uRm9jdXMuZW1pdCgpO1xuICAgIH07XG4gICAgdGhpcy5vbkJsdXIgPSAoKSA9PiB7XG4gICAgICB0aGlzLmlvbkJsdXIuZW1pdCgpO1xuICAgIH07XG4gIH1cbiAgY29tcG9uZW50V2lsbExvYWQoKSB7XG4gICAgdGhpcy5pblRvb2xiYXIgPSAhIXRoaXMuZWwuY2xvc2VzdCgnaW9uLWJ1dHRvbnMnKTtcbiAgICB0aGlzLmluTGlzdEhlYWRlciA9ICEhdGhpcy5lbC5jbG9zZXN0KCdpb24tbGlzdC1oZWFkZXInKTtcbiAgICB0aGlzLmluSXRlbSA9ICEhdGhpcy5lbC5jbG9zZXN0KCdpb24taXRlbScpIHx8ICEhdGhpcy5lbC5jbG9zZXN0KCdpb24taXRlbS1kaXZpZGVyJyk7XG4gICAgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzID0gaW5oZXJpdEFyaWFBdHRyaWJ1dGVzKHRoaXMuZWwpO1xuICB9XG4gIGdldCBoYXNJY29uT25seSgpIHtcbiAgICByZXR1cm4gISF0aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoJ1tzbG90PVwiaWNvbi1vbmx5XCJdJyk7XG4gIH1cbiAgZ2V0IHJpcHBsZVR5cGUoKSB7XG4gICAgY29uc3QgaGFzQ2xlYXJGaWxsID0gdGhpcy5maWxsID09PSB1bmRlZmluZWQgfHwgdGhpcy5maWxsID09PSAnY2xlYXInO1xuICAgIC8vIElmIHRoZSBidXR0b24gaXMgaW4gYSB0b29sYmFyLCBoYXMgYSBjbGVhciBmaWxsICh3aGljaCBpcyB0aGUgZGVmYXVsdClcbiAgICAvLyBhbmQgb25seSBoYXMgYW4gaWNvbiB3ZSB1c2UgdGhlIHVuYm91bmRlZCBcImNpcmN1bGFyXCIgcmlwcGxlIGVmZmVjdFxuICAgIGlmIChoYXNDbGVhckZpbGwgJiYgdGhpcy5oYXNJY29uT25seSAmJiB0aGlzLmluVG9vbGJhcikge1xuICAgICAgcmV0dXJuICd1bmJvdW5kZWQnO1xuICAgIH1cbiAgICByZXR1cm4gJ2JvdW5kZWQnO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBtb2RlID0gZ2V0SW9uTW9kZSQxKHRoaXMpO1xuICAgIGNvbnN0IHsgYnV0dG9uVHlwZSwgdHlwZSwgZGlzYWJsZWQsIHJlbCwgdGFyZ2V0LCBzaXplLCBocmVmLCBjb2xvciwgZXhwYW5kLCBoYXNJY29uT25seSwgc2hhcGUsIHN0cm9uZywgaW5oZXJpdGVkQXR0cmlidXRlcywgfSA9IHRoaXM7XG4gICAgY29uc3QgZmluYWxTaXplID0gc2l6ZSA9PT0gdW5kZWZpbmVkICYmIHRoaXMuaW5JdGVtID8gJ3NtYWxsJyA6IHNpemU7XG4gICAgY29uc3QgVGFnVHlwZSA9IGhyZWYgPT09IHVuZGVmaW5lZCA/ICdidXR0b24nIDogJ2EnO1xuICAgIGNvbnN0IGF0dHJzID0gVGFnVHlwZSA9PT0gJ2J1dHRvbidcbiAgICAgID8geyB0eXBlIH1cbiAgICAgIDoge1xuICAgICAgICBkb3dubG9hZDogdGhpcy5kb3dubG9hZCxcbiAgICAgICAgaHJlZixcbiAgICAgICAgcmVsLFxuICAgICAgICB0YXJnZXQsXG4gICAgICB9O1xuICAgIGxldCBmaWxsID0gdGhpcy5maWxsO1xuICAgIGlmIChmaWxsID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGZpbGwgPSB0aGlzLmluVG9vbGJhciB8fCB0aGlzLmluTGlzdEhlYWRlciA/ICdjbGVhcicgOiAnc29saWQnO1xuICAgIH1cbiAgICByZXR1cm4gKGgoSG9zdCwgeyBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLCBcImFyaWEtZGlzYWJsZWRcIjogZGlzYWJsZWQgPyAndHJ1ZScgOiBudWxsLCBjbGFzczogY3JlYXRlQ29sb3JDbGFzc2VzJDEoY29sb3IsIHtcbiAgICAgICAgW21vZGVdOiB0cnVlLFxuICAgICAgICBbYnV0dG9uVHlwZV06IHRydWUsXG4gICAgICAgIFtgJHtidXR0b25UeXBlfS0ke2V4cGFuZH1gXTogZXhwYW5kICE9PSB1bmRlZmluZWQsXG4gICAgICAgIFtgJHtidXR0b25UeXBlfS0ke2ZpbmFsU2l6ZX1gXTogZmluYWxTaXplICE9PSB1bmRlZmluZWQsXG4gICAgICAgIFtgJHtidXR0b25UeXBlfS0ke3NoYXBlfWBdOiBzaGFwZSAhPT0gdW5kZWZpbmVkLFxuICAgICAgICBbYCR7YnV0dG9uVHlwZX0tJHtmaWxsfWBdOiB0cnVlLFxuICAgICAgICBbYCR7YnV0dG9uVHlwZX0tc3Ryb25nYF06IHN0cm9uZyxcbiAgICAgICAgJ2luLXRvb2xiYXInOiBob3N0Q29udGV4dCgnaW9uLXRvb2xiYXInLCB0aGlzLmVsKSxcbiAgICAgICAgJ2luLXRvb2xiYXItY29sb3InOiBob3N0Q29udGV4dCgnaW9uLXRvb2xiYXJbY29sb3JdJywgdGhpcy5lbCksXG4gICAgICAgICdidXR0b24taGFzLWljb24tb25seSc6IGhhc0ljb25Pbmx5LFxuICAgICAgICAnYnV0dG9uLWRpc2FibGVkJzogZGlzYWJsZWQsXG4gICAgICAgICdpb24tYWN0aXZhdGFibGUnOiB0cnVlLFxuICAgICAgICAnaW9uLWZvY3VzYWJsZSc6IHRydWUsXG4gICAgICB9KSB9LCBoKFRhZ1R5cGUsIE9iamVjdC5hc3NpZ24oe30sIGF0dHJzLCB7IGNsYXNzOiBcImJ1dHRvbi1uYXRpdmVcIiwgcGFydDogXCJuYXRpdmVcIiwgZGlzYWJsZWQ6IGRpc2FibGVkLCBvbkZvY3VzOiB0aGlzLm9uRm9jdXMsIG9uQmx1cjogdGhpcy5vbkJsdXIgfSwgaW5oZXJpdGVkQXR0cmlidXRlcyksIGgoXCJzcGFuXCIsIHsgY2xhc3M6IFwiYnV0dG9uLWlubmVyXCIgfSwgaChcInNsb3RcIiwgeyBuYW1lOiBcImljb24tb25seVwiIH0pLCBoKFwic2xvdFwiLCB7IG5hbWU6IFwic3RhcnRcIiB9KSwgaChcInNsb3RcIiwgbnVsbCksIGgoXCJzbG90XCIsIHsgbmFtZTogXCJlbmRcIiB9KSksIG1vZGUgPT09ICdtZCcgJiYgaChcImlvbi1yaXBwbGUtZWZmZWN0XCIsIHsgdHlwZTogdGhpcy5yaXBwbGVUeXBlIH0pKSkpO1xuICB9XG4gIGdldCBlbCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbn07XG5CdXR0b24uc3R5bGUgPSB7XG4gIGlvczogYnV0dG9uSW9zQ3NzLFxuICBtZDogYnV0dG9uTWRDc3Ncbn07XG5cbmNvbnN0IHZhbGlkYXRlQ29udGVudCA9IChzdmdDb250ZW50KSA9PiB7XG4gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXYuaW5uZXJIVE1MID0gc3ZnQ29udGVudDtcbiAgLy8gc2V0dXAgdGhpcyB3YXkgdG8gZW5zdXJlIGl0IHdvcmtzIG9uIG91ciBidWRkeSBJRVxuICBmb3IgKGxldCBpID0gZGl2LmNoaWxkTm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAoZGl2LmNoaWxkTm9kZXNbaV0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gJ3N2ZycpIHtcbiAgICAgIGRpdi5yZW1vdmVDaGlsZChkaXYuY2hpbGROb2Rlc1tpXSk7XG4gICAgfVxuICB9XG4gIC8vIG11c3Qgb25seSBoYXZlIDEgcm9vdCBlbGVtZW50XG4gIGNvbnN0IHN2Z0VsbSA9IGRpdi5maXJzdEVsZW1lbnRDaGlsZDtcbiAgaWYgKHN2Z0VsbSAmJiBzdmdFbG0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3N2ZycpIHtcbiAgICBjb25zdCBzdmdDbGFzcyA9IHN2Z0VsbS5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykgfHwgJyc7XG4gICAgc3ZnRWxtLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAoc3ZnQ2xhc3MgKyAnIHMtaW9uLWljb24nKS50cmltKCkpO1xuICAgIC8vIHJvb3QgZWxlbWVudCBtdXN0IGJlIGFuIHN2Z1xuICAgIC8vIGxldHMgZG91YmxlIGNoZWNrIHdlJ3ZlIGdvdCB2YWxpZCBlbGVtZW50c1xuICAgIC8vIGRvIG5vdCBhbGxvdyBzY3JpcHRzXG4gICAgaWYgKGlzVmFsaWQoc3ZnRWxtKSkge1xuICAgICAgcmV0dXJuIGRpdi5pbm5lckhUTUw7XG4gICAgfVxuICB9XG4gIHJldHVybiAnJztcbn07XG5jb25zdCBpc1ZhbGlkID0gKGVsbSkgPT4ge1xuICBpZiAoZWxtLm5vZGVUeXBlID09PSAxKSB7XG4gICAgaWYgKGVsbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc2NyaXB0Jykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVsbS5hdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBuYW1lID0gZWxtLmF0dHJpYnV0ZXNbaV0ubmFtZTtcbiAgICAgIGlmIChpc1N0cihuYW1lKSAmJiBuYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZignb24nKSA9PT0gMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxtLmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghaXNWYWxpZChlbG0uY2hpbGROb2Rlc1tpXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbmNvbnN0IGlvbmljb25Db250ZW50ID0gbmV3IE1hcCgpO1xuY29uc3QgcmVxdWVzdHMgPSBuZXcgTWFwKCk7XG5jb25zdCBnZXRTdmdDb250ZW50ID0gKHVybCwgc2FuaXRpemUpID0+IHtcbiAgLy8gc2VlIGlmIHdlIGFscmVhZHkgaGF2ZSBhIHJlcXVlc3QgZm9yIHRoaXMgdXJsXG4gIGxldCByZXEgPSByZXF1ZXN0cy5nZXQodXJsKTtcbiAgaWYgKCFyZXEpIHtcbiAgICBpZiAodHlwZW9mIGZldGNoICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyB3ZSBkb24ndCBhbHJlYWR5IGhhdmUgYSByZXF1ZXN0XG4gICAgICByZXEgPSBmZXRjaCh1cmwpLnRoZW4oKHJzcCkgPT4ge1xuICAgICAgICBpZiAocnNwLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJzcC50ZXh0KCkudGhlbigoc3ZnQ29udGVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKHN2Z0NvbnRlbnQgJiYgc2FuaXRpemUgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgIHN2Z0NvbnRlbnQgPSB2YWxpZGF0ZUNvbnRlbnQoc3ZnQ29udGVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpb25pY29uQ29udGVudC5zZXQodXJsLCBzdmdDb250ZW50IHx8ICcnKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpb25pY29uQ29udGVudC5zZXQodXJsLCAnJyk7XG4gICAgICB9KTtcbiAgICAgIC8vIGNhY2hlIGZvciB0aGUgc2FtZSByZXF1ZXN0c1xuICAgICAgcmVxdWVzdHMuc2V0KHVybCwgcmVxKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAvLyBzZXQgdG8gZW1wdHkgZm9yIHNzciBzY2VuYXJpb3MgYW5kIHJlc29sdmUgcHJvbWlzZVxuICAgICAgaW9uaWNvbkNvbnRlbnQuc2V0KHVybCwgJycpO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVxO1xufTtcblxuY29uc3QgaWNvbkNzcyA9IFwiOmhvc3R7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MWVtO2hlaWdodDoxZW07Y29udGFpbjpzdHJpY3Q7ZmlsbDpjdXJyZW50Q29sb3I7LXdlYmtpdC1ib3gtc2l6aW5nOmNvbnRlbnQtYm94ICFpbXBvcnRhbnQ7Ym94LXNpemluZzpjb250ZW50LWJveCAhaW1wb3J0YW50fTpob3N0IC5pb25pY29ue3N0cm9rZTpjdXJyZW50Q29sb3J9Lmlvbmljb24tZmlsbC1ub25le2ZpbGw6bm9uZX0uaW9uaWNvbi1zdHJva2Utd2lkdGh7c3Ryb2tlLXdpZHRoOjMycHg7c3Ryb2tlLXdpZHRoOnZhcigtLWlvbmljb24tc3Ryb2tlLXdpZHRoLCAzMnB4KX0uaWNvbi1pbm5lciwuaW9uaWNvbixzdmd7ZGlzcGxheTpibG9jaztoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlfTpob3N0KC5mbGlwLXJ0bCkgLmljb24taW5uZXJ7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGVYKC0xKTt0cmFuc2Zvcm06c2NhbGVYKC0xKX06aG9zdCguaWNvbi1zbWFsbCl7Zm9udC1zaXplOjE4cHggIWltcG9ydGFudH06aG9zdCguaWNvbi1sYXJnZSl7Zm9udC1zaXplOjMycHggIWltcG9ydGFudH06aG9zdCguaW9uLWNvbG9yKXtjb2xvcjp2YXIoLS1pb24tY29sb3ItYmFzZSkgIWltcG9ydGFudH06aG9zdCguaW9uLWNvbG9yLXByaW1hcnkpey0taW9uLWNvbG9yLWJhc2U6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMzODgwZmYpfTpob3N0KC5pb24tY29sb3Itc2Vjb25kYXJ5KXstLWlvbi1jb2xvci1iYXNlOnZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnksICMwY2QxZTgpfTpob3N0KC5pb24tY29sb3ItdGVydGlhcnkpey0taW9uLWNvbG9yLWJhc2U6dmFyKC0taW9uLWNvbG9yLXRlcnRpYXJ5LCAjZjRhOTQyKX06aG9zdCguaW9uLWNvbG9yLXN1Y2Nlc3Mpey0taW9uLWNvbG9yLWJhc2U6dmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MsICMxMGRjNjApfTpob3N0KC5pb24tY29sb3Itd2FybmluZyl7LS1pb24tY29sb3ItYmFzZTp2YXIoLS1pb24tY29sb3Itd2FybmluZywgI2ZmY2UwMCl9Omhvc3QoLmlvbi1jb2xvci1kYW5nZXIpey0taW9uLWNvbG9yLWJhc2U6dmFyKC0taW9uLWNvbG9yLWRhbmdlciwgI2YxNDE0MSl9Omhvc3QoLmlvbi1jb2xvci1saWdodCl7LS1pb24tY29sb3ItYmFzZTp2YXIoLS1pb24tY29sb3ItbGlnaHQsICNmNGY1ZjgpfTpob3N0KC5pb24tY29sb3ItbWVkaXVtKXstLWlvbi1jb2xvci1iYXNlOnZhcigtLWlvbi1jb2xvci1tZWRpdW0sICM5ODlhYTIpfTpob3N0KC5pb24tY29sb3ItZGFyayl7LS1pb24tY29sb3ItYmFzZTp2YXIoLS1pb24tY29sb3ItZGFyaywgIzIyMjQyOCl9XCI7XG5cbmNvbnN0IEljb24gPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgIHRoaXMuaWNvbk5hbWUgPSBudWxsO1xuICAgIHRoaXMuaW5oZXJpdGVkQXR0cmlidXRlcyA9IHt9O1xuICAgIHRoaXMuaXNWaXNpYmxlID0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogVGhlIG1vZGUgZGV0ZXJtaW5lcyB3aGljaCBwbGF0Zm9ybSBzdHlsZXMgdG8gdXNlLlxuICAgICAqL1xuICAgIHRoaXMubW9kZSA9IGdldElvbk1vZGUoKTtcbiAgICAvKipcbiAgICAgKiBJZiBlbmFibGVkLCBpb24taWNvbiB3aWxsIGJlIGxvYWRlZCBsYXppbHkgd2hlbiBpdCdzIHZpc2libGUgaW4gdGhlIHZpZXdwb3J0LlxuICAgICAqIERlZmF1bHQsIGBmYWxzZWAuXG4gICAgICovXG4gICAgdGhpcy5sYXp5ID0gZmFsc2U7XG4gICAgLyoqXG4gICAgICogV2hlbiBzZXQgdG8gYGZhbHNlYCwgU1ZHIGNvbnRlbnQgdGhhdCBpcyBIVFRQIGZldGNoZWQgd2lsbCBub3QgYmUgY2hlY2tlZFxuICAgICAqIGlmIHRoZSByZXNwb25zZSBTVkcgY29udGVudCBoYXMgYW55IGA8c2NyaXB0PmAgZWxlbWVudHMsIG9yIGFueSBhdHRyaWJ1dGVzXG4gICAgICogdGhhdCBzdGFydCB3aXRoIGBvbmAsIHN1Y2ggYXMgYG9uY2xpY2tgLlxuICAgICAqIEBkZWZhdWx0IHRydWVcbiAgICAgKi9cbiAgICB0aGlzLnNhbml0aXplID0gdHJ1ZTtcbiAgICB0aGlzLmhhc0FyaWFIaWRkZW4gPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGVsIH0gPSB0aGlzO1xuICAgICAgcmV0dXJuIGVsLmhhc0F0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nKSAmJiBlbC5nZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJykgPT09ICd0cnVlJztcbiAgICB9O1xuICB9XG4gIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIHRoaXMuaW5oZXJpdGVkQXR0cmlidXRlcyA9IGluaGVyaXRBdHRyaWJ1dGVzKHRoaXMuZWwsIFsnYXJpYS1sYWJlbCddKTtcbiAgfVxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAvLyBwdXJwb3NlbHkgZG8gbm90IHJldHVybiB0aGUgcHJvbWlzZSBoZXJlIGJlY2F1c2UgbG9hZGluZ1xuICAgIC8vIHRoZSBzdmcgZmlsZSBzaG91bGQgbm90IGhvbGQgdXAgbG9hZGluZyB0aGUgYXBwXG4gICAgLy8gb25seSBsb2FkIHRoZSBzdmcgaWYgaXQncyB2aXNpYmxlXG4gICAgdGhpcy53YWl0VW50aWxWaXNpYmxlKHRoaXMuZWwsICc1MHB4JywgKCkgPT4ge1xuICAgICAgdGhpcy5pc1Zpc2libGUgPSB0cnVlO1xuICAgICAgdGhpcy5sb2FkSWNvbigpO1xuICAgIH0pO1xuICB9XG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGlmICh0aGlzLmlvKSB7XG4gICAgICB0aGlzLmlvLmRpc2Nvbm5lY3QoKTtcbiAgICAgIHRoaXMuaW8gPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIHdhaXRVbnRpbFZpc2libGUoZWwsIHJvb3RNYXJnaW4sIGNiKSB7XG4gICAgaWYgKHRoaXMubGF6eSAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuSW50ZXJzZWN0aW9uT2JzZXJ2ZXIpIHtcbiAgICAgIGNvbnN0IGlvID0gKHRoaXMuaW8gPSBuZXcgd2luZG93LkludGVyc2VjdGlvbk9ic2VydmVyKChkYXRhKSA9PiB7XG4gICAgICAgIGlmIChkYXRhWzBdLmlzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgICAgaW8uZGlzY29ubmVjdCgpO1xuICAgICAgICAgIHRoaXMuaW8gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgICAgfSwgeyByb290TWFyZ2luIH0pKTtcbiAgICAgIGlvLm9ic2VydmUoZWwpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIC8vIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IEludGVyc2VjdGlvbk9ic2VydmVyXG4gICAgICAvLyBzbyBqdXN0IGZhbGxiYWNrIHRvIGFsd2F5cyBzaG93IGl0XG4gICAgICBjYigpO1xuICAgIH1cbiAgfVxuICBsb2FkSWNvbigpIHtcbiAgICBpZiAodGhpcy5pc1Zpc2libGUpIHtcbiAgICAgIGNvbnN0IHVybCA9IGdldFVybCh0aGlzKTtcbiAgICAgIGlmICh1cmwpIHtcbiAgICAgICAgaWYgKGlvbmljb25Db250ZW50Lmhhcyh1cmwpKSB7XG4gICAgICAgICAgLy8gc3luYyBpZiBpdCdzIGFscmVhZHkgbG9hZGVkXG4gICAgICAgICAgdGhpcy5zdmdDb250ZW50ID0gaW9uaWNvbkNvbnRlbnQuZ2V0KHVybCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgLy8gYXN5bmMgaWYgaXQgaGFzbid0IGJlZW4gbG9hZGVkXG4gICAgICAgICAgZ2V0U3ZnQ29udGVudCh1cmwsIHRoaXMuc2FuaXRpemUpLnRoZW4oKCkgPT4gKHRoaXMuc3ZnQ29udGVudCA9IGlvbmljb25Db250ZW50LmdldCh1cmwpKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgbGFiZWwgPSB0aGlzLmljb25OYW1lID0gZ2V0TmFtZSh0aGlzLm5hbWUsIHRoaXMuaWNvbiwgdGhpcy5tb2RlLCB0aGlzLmlvcywgdGhpcy5tZCk7XG4gICAgLyoqXG4gICAgICogQ29tZSB1cCB3aXRoIGEgZGVmYXVsdCBsYWJlbFxuICAgICAqIGluIGNhc2UgdXNlciBkb2VzIG5vdCBwcm92aWRlIHRoZWlyIG93bi5cbiAgICAgKi9cbiAgICBpZiAobGFiZWwpIHtcbiAgICAgIHRoaXMuYXJpYUxhYmVsID0gbGFiZWwucmVwbGFjZSgvXFwtL2csICcgJyk7XG4gICAgfVxuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGljb25OYW1lLCBhcmlhTGFiZWwsIGluaGVyaXRlZEF0dHJpYnV0ZXMgfSA9IHRoaXM7XG4gICAgY29uc3QgbW9kZSA9IHRoaXMubW9kZSB8fCAnbWQnO1xuICAgIGNvbnN0IGZsaXBSdGwgPSB0aGlzLmZsaXBSdGwgfHxcbiAgICAgIChpY29uTmFtZSAmJlxuICAgICAgICAoaWNvbk5hbWUuaW5kZXhPZignYXJyb3cnKSA+IC0xIHx8IGljb25OYW1lLmluZGV4T2YoJ2NoZXZyb24nKSA+IC0xKSAmJlxuICAgICAgICB0aGlzLmZsaXBSdGwgIT09IGZhbHNlKTtcbiAgICAvKipcbiAgICAgKiBPbmx5IHNldCB0aGUgYXJpYS1sYWJlbCBpZiBhKSB3ZSBoYXZlIGdlbmVyYXRlZFxuICAgICAqIG9uZSBmb3IgdGhlIGljb24gYW5kIGlmIGFyaWEtaGlkZGVuIGlzIG5vdCBzZXQgdG8gXCJ0cnVlXCIuXG4gICAgICogSWYgZGV2ZWxvcGVyIHdhbnRzIHRvIHNldCB0aGVpciBvd24gYXJpYS1sYWJlbCwgdGhlblxuICAgICAqIGluaGVyaXRlZEF0dHJpYnV0ZXMgZG93biBiZWxvdyB3aWxsIG92ZXJyaWRlIHdoYXRldmVyXG4gICAgICogZGVmYXVsdCBsYWJlbCB3ZSBoYXZlIHNldC5cbiAgICAgKi9cbiAgICByZXR1cm4gKGgoSG9zdCwgT2JqZWN0LmFzc2lnbih7IFwiYXJpYS1sYWJlbFwiOiBhcmlhTGFiZWwgIT09IHVuZGVmaW5lZCAmJiAhdGhpcy5oYXNBcmlhSGlkZGVuKCkgPyBhcmlhTGFiZWwgOiBudWxsLCByb2xlOiBcImltZ1wiLCBjbGFzczogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgW21vZGVdOiB0cnVlIH0sIGNyZWF0ZUNvbG9yQ2xhc3Nlcyh0aGlzLmNvbG9yKSksIHsgW2BpY29uLSR7dGhpcy5zaXplfWBdOiAhIXRoaXMuc2l6ZSwgJ2ZsaXAtcnRsJzogISFmbGlwUnRsICYmIHRoaXMuZWwub3duZXJEb2N1bWVudC5kaXIgPT09ICdydGwnIH0pIH0sIGluaGVyaXRlZEF0dHJpYnV0ZXMpLCB0aGlzLnN2Z0NvbnRlbnQgPyAoaChcImRpdlwiLCB7IGNsYXNzOiBcImljb24taW5uZXJcIiwgaW5uZXJIVE1MOiB0aGlzLnN2Z0NvbnRlbnQgfSkpIDogKGgoXCJkaXZcIiwgeyBjbGFzczogXCJpY29uLWlubmVyXCIgfSkpKSk7XG4gIH1cbiAgc3RhdGljIGdldCBhc3NldHNEaXJzKCkgeyByZXR1cm4gW1wic3ZnXCJdOyB9XG4gIGdldCBlbCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbiAgc3RhdGljIGdldCB3YXRjaGVycygpIHsgcmV0dXJuIHtcbiAgICBcIm5hbWVcIjogW1wibG9hZEljb25cIl0sXG4gICAgXCJzcmNcIjogW1wibG9hZEljb25cIl0sXG4gICAgXCJpY29uXCI6IFtcImxvYWRJY29uXCJdXG4gIH07IH1cbn07XG5jb25zdCBnZXRJb25Nb2RlID0gKCkgPT4gKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kZScpKSB8fCAnbWQnO1xuY29uc3QgY3JlYXRlQ29sb3JDbGFzc2VzID0gKGNvbG9yKSA9PiB7XG4gIHJldHVybiBjb2xvclxuICAgID8ge1xuICAgICAgJ2lvbi1jb2xvcic6IHRydWUsXG4gICAgICBbYGlvbi1jb2xvci0ke2NvbG9yfWBdOiB0cnVlLFxuICAgIH1cbiAgICA6IG51bGw7XG59O1xuSWNvbi5zdHlsZSA9IGljb25Dc3M7XG5cbmV4cG9ydCB7IEJ1dHRvbiBhcyBpb25fYnV0dG9uLCBJY29uIGFzIGlvbl9pY29uIH07XG4iLCIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuY29uc3QgaG9zdENvbnRleHQgPSAoc2VsZWN0b3IsIGVsKSA9PiB7XG4gIHJldHVybiBlbC5jbG9zZXN0KHNlbGVjdG9yKSAhPT0gbnVsbDtcbn07XG4vKipcbiAqIENyZWF0ZSB0aGUgbW9kZSBhbmQgY29sb3IgY2xhc3NlcyBmb3IgdGhlIGNvbXBvbmVudCBiYXNlZCBvbiB0aGUgY2xhc3NlcyBwYXNzZWQgaW5cbiAqL1xuY29uc3QgY3JlYXRlQ29sb3JDbGFzc2VzID0gKGNvbG9yLCBjc3NDbGFzc01hcCkgPT4ge1xuICByZXR1cm4gdHlwZW9mIGNvbG9yID09PSAnc3RyaW5nJyAmJiBjb2xvci5sZW5ndGggPiAwXG4gICAgPyBPYmplY3QuYXNzaWduKHsgJ2lvbi1jb2xvcic6IHRydWUsIFtgaW9uLWNvbG9yLSR7Y29sb3J9YF06IHRydWUgfSwgY3NzQ2xhc3NNYXApIDogY3NzQ2xhc3NNYXA7XG59O1xuY29uc3QgZ2V0Q2xhc3NMaXN0ID0gKGNsYXNzZXMpID0+IHtcbiAgaWYgKGNsYXNzZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGFycmF5ID0gQXJyYXkuaXNBcnJheShjbGFzc2VzKSA/IGNsYXNzZXMgOiBjbGFzc2VzLnNwbGl0KCcgJyk7XG4gICAgcmV0dXJuIGFycmF5XG4gICAgICAuZmlsdGVyKChjKSA9PiBjICE9IG51bGwpXG4gICAgICAubWFwKChjKSA9PiBjLnRyaW0oKSlcbiAgICAgIC5maWx0ZXIoKGMpID0+IGMgIT09ICcnKTtcbiAgfVxuICByZXR1cm4gW107XG59O1xuY29uc3QgZ2V0Q2xhc3NNYXAgPSAoY2xhc3NlcykgPT4ge1xuICBjb25zdCBtYXAgPSB7fTtcbiAgZ2V0Q2xhc3NMaXN0KGNsYXNzZXMpLmZvckVhY2goKGMpID0+IChtYXBbY10gPSB0cnVlKSk7XG4gIHJldHVybiBtYXA7XG59O1xuY29uc3QgU0NIRU1FID0gL15bYS16XVthLXowLTkrXFwtLl0qOi87XG5jb25zdCBvcGVuVVJMID0gYXN5bmMgKHVybCwgZXYsIGRpcmVjdGlvbiwgYW5pbWF0aW9uKSA9PiB7XG4gIGlmICh1cmwgIT0gbnVsbCAmJiB1cmxbMF0gIT09ICcjJyAmJiAhU0NIRU1FLnRlc3QodXJsKSkge1xuICAgIGNvbnN0IHJvdXRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lvbi1yb3V0ZXInKTtcbiAgICBpZiAocm91dGVyKSB7XG4gICAgICBpZiAoZXYgIT0gbnVsbCkge1xuICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKHVybCwgZGlyZWN0aW9uLCBhbmltYXRpb24pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuXG5leHBvcnQgeyBjcmVhdGVDb2xvckNsYXNzZXMgYXMgYywgZ2V0Q2xhc3NNYXAgYXMgZywgaG9zdENvbnRleHQgYXMgaCwgb3BlblVSTCBhcyBvIH07XG4iXSwibmFtZXMiOlsiayIsImdldEFzc2V0UGF0aCIsInIiLCJyZWdpc3Rlckluc3RhbmNlIiwiZSIsImNyZWF0ZUV2ZW50IiwiaCIsIkgiLCJIb3N0IiwiaSIsImdldEVsZW1lbnQiLCJiIiwiZ2V0SW9uTW9kZSQxIiwibSIsImhhc1NoYWRvd0RvbSIsImluaGVyaXRBcmlhQXR0cmlidXRlcyIsIm8iLCJvcGVuVVJMIiwiYyIsImNyZWF0ZUNvbG9yQ2xhc3NlcyQxIiwiaG9zdENvbnRleHQiLCJDQUNIRURfTUFQIiwiZ2V0SWNvbk1hcCIsIndpbmRvdyIsIk1hcCIsIndpbiIsIklvbmljb25zIiwibWFwIiwiZ2V0VXJsIiwidXJsIiwiZ2V0U3JjIiwic3JjIiwiZ2V0TmFtZSIsIm5hbWUiLCJpY29uIiwibW9kZSIsImlvcyIsIm1kIiwiZ2V0TmFtZWRVcmwiLCJpY29uTmFtZSIsImdldCIsInRvTG93ZXIiLCJpc1NyYyIsImlzU3RyIiwidHJpbSIsImludmFsaWRDaGFycyIsInJlcGxhY2UiLCJzdHIiLCJsZW5ndGgiLCJ0ZXN0IiwidmFsIiwidG9Mb3dlckNhc2UiLCJpbmhlcml0QXR0cmlidXRlcyIsImVsIiwiYXR0cmlidXRlcyIsImF0dHJpYnV0ZU9iamVjdCIsImZvckVhY2giLCJhdHRyIiwiaGFzQXR0cmlidXRlIiwidmFsdWUiLCJnZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJidXR0b25Jb3NDc3MiLCJidXR0b25NZENzcyIsIkJ1dHRvbiIsImNvbnN0cnVjdG9yIiwiaG9zdFJlZiIsImlvbkZvY3VzIiwiaW9uQmx1ciIsImluSXRlbSIsImluTGlzdEhlYWRlciIsImluVG9vbGJhciIsImluaGVyaXRlZEF0dHJpYnV0ZXMiLCJidXR0b25UeXBlIiwiZGlzYWJsZWQiLCJyb3V0ZXJEaXJlY3Rpb24iLCJzdHJvbmciLCJ0eXBlIiwiaGFuZGxlQ2xpY2siLCJldiIsImhyZWYiLCJyb3V0ZXJBbmltYXRpb24iLCJmb3JtIiwiY2xvc2VzdCIsInByZXZlbnREZWZhdWx0IiwiZmFrZUJ1dHRvbiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwiZGlzcGxheSIsImFwcGVuZENoaWxkIiwiY2xpY2siLCJyZW1vdmUiLCJvbkZvY3VzIiwiZW1pdCIsIm9uQmx1ciIsImNvbXBvbmVudFdpbGxMb2FkIiwiaGFzSWNvbk9ubHkiLCJxdWVyeVNlbGVjdG9yIiwicmlwcGxlVHlwZSIsImhhc0NsZWFyRmlsbCIsImZpbGwiLCJ1bmRlZmluZWQiLCJyZW5kZXIiLCJyZWwiLCJ0YXJnZXQiLCJzaXplIiwiY29sb3IiLCJleHBhbmQiLCJzaGFwZSIsImZpbmFsU2l6ZSIsIlRhZ1R5cGUiLCJhdHRycyIsImRvd25sb2FkIiwib25DbGljayIsImNsYXNzIiwiT2JqZWN0IiwiYXNzaWduIiwicGFydCIsInZhbGlkYXRlQ29udGVudCIsInN2Z0NvbnRlbnQiLCJkaXYiLCJpbm5lckhUTUwiLCJjaGlsZE5vZGVzIiwibm9kZU5hbWUiLCJyZW1vdmVDaGlsZCIsInN2Z0VsbSIsImZpcnN0RWxlbWVudENoaWxkIiwic3ZnQ2xhc3MiLCJzZXRBdHRyaWJ1dGUiLCJpc1ZhbGlkIiwiZWxtIiwibm9kZVR5cGUiLCJpbmRleE9mIiwiaW9uaWNvbkNvbnRlbnQiLCJyZXF1ZXN0cyIsImdldFN2Z0NvbnRlbnQiLCJzYW5pdGl6ZSIsInJlcSIsImZldGNoIiwidGhlbiIsInJzcCIsIm9rIiwidGV4dCIsInNldCIsIlByb21pc2UiLCJyZXNvbHZlIiwiaWNvbkNzcyIsIkljb24iLCJpc1Zpc2libGUiLCJnZXRJb25Nb2RlIiwibGF6eSIsImhhc0FyaWFIaWRkZW4iLCJjb25uZWN0ZWRDYWxsYmFjayIsIndhaXRVbnRpbFZpc2libGUiLCJsb2FkSWNvbiIsImRpc2Nvbm5lY3RlZENhbGxiYWNrIiwiaW8iLCJkaXNjb25uZWN0Iiwicm9vdE1hcmdpbiIsImNiIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJkYXRhIiwiaXNJbnRlcnNlY3RpbmciLCJvYnNlcnZlIiwiaGFzIiwibGFiZWwiLCJhcmlhTGFiZWwiLCJmbGlwUnRsIiwicm9sZSIsImNyZWF0ZUNvbG9yQ2xhc3NlcyIsIm93bmVyRG9jdW1lbnQiLCJkaXIiLCJhc3NldHNEaXJzIiwid2F0Y2hlcnMiLCJkb2N1bWVudEVsZW1lbnQiLCJpb25fYnV0dG9uIiwiaW9uX2ljb24iLCJzZWxlY3RvciIsImNzc0NsYXNzTWFwIiwiZ2V0Q2xhc3NMaXN0IiwiY2xhc3NlcyIsImFycmF5IiwiQXJyYXkiLCJpc0FycmF5Iiwic3BsaXQiLCJmaWx0ZXIiLCJnZXRDbGFzc01hcCIsIlNDSEVNRSIsImRpcmVjdGlvbiIsImFuaW1hdGlvbiIsInJvdXRlciIsInB1c2giLCJnIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswLDFdfQ==